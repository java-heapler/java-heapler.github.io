{"version":3,"file":"static/js/144.f3bd5196.chunk.js","mappings":"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","sources":["components/Projects.js"],"sourcesContent":["// src/components/Projects.js\nimport React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { FaGithub, FaSearch } from 'react-icons/fa';\nimport '../styles/Projects.css';\n\nconst categories = [\n  'All',\n  'Machine Learning',\n  'Web Development',\n  'Games',\n  'Data Analysis',\n  'Systems'\n];\n\nconst projectData = [\n  {\n    title: 'Modern React Portfolio Website',\n    description: 'Engineered a responsive single-page application using React and modern JavaScript. Implemented custom animations, dynamic content filtering, and responsive design principles. Features include component-based architecture, state management, and seamless user experience with CSS transitions and Intersection Observer API.',\n    link: 'https://github.com/java-heapler/portfolio',\n    categories: ['Web Development', 'React']\n  },\n  { title: 'Ants Vs. SomeBees', description: 'Developed a tower defense game using Python, focusing on OOP and functional programming paradigms.', link: 'https://github.com/java-heapler/ants-vs-somebees', categories: ['Games', 'Python'] },\n  { title: 'Cats', description: 'Created a typing game using Python, implemented algorithms to calculate typing speed and accuracy.', link: 'https://github.com/java-heapler/cats', categories: ['Games', 'Python'] },\n  { title: 'Hog', description: 'Built a dice game using Python, incorporating strategic decision-making and probabilistic analysis.', link: 'https://github.com/java-heapler/hog', categories: ['Games', 'Python'] },\n  { title: 'Scheme', description: 'Implemented an interpreter for the Scheme language using Python, focusing on parsing and evaluation.', link: 'https://github.com/java-heapler/scheme', categories: ['Systems', 'Python'] },\n  { title: 'Ataxx', description: 'Created a board game with a graphical user interface using Java and Java Swing.', link: 'https://github.com/java-heapler/ataxx', categories: ['Games', 'Java'] },\n  { title: 'Enigma', description: 'Simulated the Enigma machine using Java, focusing on cryptographic algorithms.', link: 'https://github.com/java-heapler/enigma', categories: ['Machine Learning', 'Java'] },\n  { title: 'Gitlet', description: 'Developed a version control system similar to Git using Java, implemented core version control features.', link: 'https://github.com/java-heapler/gitlet', categories: ['Systems', 'Java'] },\n  { title: 'Philphix', description: 'Developed a text processing tool using C, focusing on efficient text parsing and replacement algorithms.', link: 'https://github.com/java-heapler/philphix', categories: ['Systems', 'C'] },\n  { title: 'Pacman', description: 'Developed an AI for Pacman using Python, implemented search algorithms and reinforcement learning techniques.', link: 'https://github.com/java-heapler/pacman', categories: ['Machine Learning', 'Python'] },\n  { title: 'Social Buzz Analyzer', description: 'Performed sentiment analysis using NLP techniques in Python with NLTK and spaCy, visualized trends in Jupyter Notebook.', link: 'https://github.com/java-heapler/social-buzz-analyzer', categories: ['Data Analysis', 'Python'] },\n  { title: 'Smart Sales Predictor', description: 'Built a forecasting model using ARIMA and Prophet in Python, improved accuracy by 20%, preprocessed data with pandas.', link: 'https://github.com/java-heapler/smart-sales-predictor', categories: ['Data Analysis', 'Python'] },\n  { title: 'Customer Insight Clustering', description: 'Implemented K-Means clustering in Python, analyzed data with pandas, visualized clusters using matplotlib and seaborn.', link: 'https://github.com/java-heapler/customer-insight-clustering', categories: ['Data Analysis', 'Python'] },\n  { title: 'Proactive Maintenance Predictor', description: 'Developed time-series predictive maintenance model in Python, achieved 95% accuracy.', link: 'https://github.com/java-heapler/proactive-maintenance-predictor', categories: ['Data Analysis', 'Python'] },\n  { title: 'Sales Regression Analysis', description: 'Conducted linear regression and hypothesis testing on sales data using R.', link: 'https://github.com/java-heapler/sales-regression-analysis', categories: ['Data Analysis', 'R'] },\n  { title: 'Predictive Modeling for MNIST and College Data', description: 'Developed and evaluated models including Logistic Regression, LDA, QDA, Linear Regression, Ridge, and Lasso using Python and scikit-learn on MNIST and college admission datasets.', link: 'https://github.com/java-heapler/predictive-modeling-mnist-college', categories: ['Machine Learning', 'Python'] },\n  { title: 'Advanced Machine Learning Techniques for Data Analysis', description: 'Applied PCA, k-means clustering, SVMs, and Kernel PCA using Python, R, and scikit-learn on datasets like MNIST for dimensionality reduction, clustering, and classification.', link: 'https://github.com/java-heapler/advanced-ml-techniques', categories: ['Machine Learning', 'Python'] },\n  { title: 'Ensemble Methods and SVM for Advanced Data Analysis', description: 'Implemented Bagging, Boosting, SVMs, and Random Forests using Python, scikit-learn, and pandas on MNIST dataset for classification and variance reduction.', link: 'https://github.com/java-heapler/ensemble-methods-svm', categories: ['Machine Learning', 'Python'] },\n  { title: 'Neural Network Digit Classification', description: 'Developed neural networks for digit classification using Python and NumPy, implementing perceptron, backpropagation, and RNNs for tasks including regression and language identification.', link: 'https://github.com/java-heapler/nn-digit-classification', categories: ['Machine Learning', 'Python'] },\n  { title: 'Neural Networks and Learning Theory Applications', description: 'Explored advanced techniques like FNNs, CNNs, Autoencoders, and GANs using Python, PyTorch, and scikit-learn. Analyzed datasets like CIFAR-10 and Fashion MNIST, implementing dropout and various optimizers for enhanced performance.', link: 'https://github.com/java-heapler/nn-learning-theory', categories: ['Machine Learning', 'Python'] }\n];\n\nfunction Projects() {\n  const [filter, setFilter] = useState('All');\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const filteredProjects = projectData.filter(project => {\n    const matchesFilter = filter === 'All' || project.categories.includes(filter);\n    const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         project.description.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesFilter && matchesSearch;\n  });\n\n  return (\n    <section id=\"projects\" className=\"section projects\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h2>Projects</h2>\n        \n        <div className=\"projects-controls\">\n          <div className=\"search-box\">\n            <FaSearch className=\"search-icon\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search projects...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n            />\n          </div>\n          \n          <div className=\"category-filters\">\n            {categories.map(category => (\n              <button\n                key={category}\n                className={`filter-btn ${filter === category ? 'active' : ''}`}\n                onClick={() => setFilter(category)}\n              >\n                {category}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"projects-grid\">\n          {filteredProjects.map((project, index) => (\n            <motion.div\n              key={index}\n              className=\"project-card\"\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: index * 0.1 }}\n            >\n              <div className=\"project-content\">\n                <h3>{project.title}</h3>\n                <p>{project.description}</p>\n                <div className=\"project-tags\">\n                  {project.categories.map((tag, idx) => (\n                    <span key={idx} className=\"tag\">{tag}</span>\n                  ))}\n                </div>\n              </div>\n              <div className=\"project-footer\">\n                <a href={project.link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"github-link\">\n                  <FaGithub /> View Code\n                </a>\n              </div>\n            </motion.div>\n          ))}\n        </div>\n      </motion.div>\n    </section>\n  );\n}\n\nexport default Projects;\n"],"names":["categories","projectData","title","description","link","filter","setFilter","useState","searchTerm","setSearchTerm","filteredProjects","project","matchesFilter","includes","matchesSearch","toLowerCase","_jsx","id","className","children","_jsxs","motion","div","initial","opacity","y","animate","transition","duration","FaSearch","type","placeholder","value","onChange","e","target","map","category","concat","onClick","index","delay","tag","idx","href","rel","FaGithub"],"sourceRoot":""}