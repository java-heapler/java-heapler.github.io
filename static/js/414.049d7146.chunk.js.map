{"version":3,"file":"static/js/414.049d7146.chunk.js","mappings":"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","sources":["../node_modules/react-swipeable/src/index.ts","../node_modules/react-swipeable/src/types.ts","components/Projects.js"],"sourcesContent":["/* global document */\nimport * as React from \"react\";\nimport {\n  AttachTouch,\n  SwipeDirections,\n  DOWN,\n  SwipeEventData,\n  HandledEvents,\n  LEFT,\n  RIGHT,\n  Setter,\n  ConfigurationOptions,\n  SwipeableDirectionCallbacks,\n  SwipeableHandlers,\n  SwipeableProps,\n  SwipeablePropsWithDefaultOptions,\n  SwipeableState,\n  SwipeCallback,\n  TapCallback,\n  UP,\n  Vector2,\n} from \"./types\";\n\nexport {\n  LEFT,\n  RIGHT,\n  UP,\n  DOWN,\n  SwipeDirections,\n  SwipeEventData,\n  SwipeableDirectionCallbacks,\n  SwipeCallback,\n  TapCallback,\n  SwipeableHandlers,\n  SwipeableProps,\n  Vector2,\n};\n\nconst defaultProps: ConfigurationOptions = {\n  delta: 10,\n  preventScrollOnSwipe: false,\n  rotationAngle: 0,\n  trackMouse: false,\n  trackTouch: true,\n  swipeDuration: Infinity,\n  touchEventOptions: { passive: true },\n};\nconst initialState: SwipeableState = {\n  first: true,\n  initial: [0, 0],\n  start: 0,\n  swiping: false,\n  xy: [0, 0],\n};\nconst mouseMove = \"mousemove\";\nconst mouseUp = \"mouseup\";\nconst touchEnd = \"touchend\";\nconst touchMove = \"touchmove\";\nconst touchStart = \"touchstart\";\n\nfunction getDirection(\n  absX: number,\n  absY: number,\n  deltaX: number,\n  deltaY: number\n): SwipeDirections {\n  if (absX > absY) {\n    if (deltaX > 0) {\n      return RIGHT;\n    }\n    return LEFT;\n  } else if (deltaY > 0) {\n    return DOWN;\n  }\n  return UP;\n}\n\nfunction rotateXYByAngle(pos: Vector2, angle: number): Vector2 {\n  if (angle === 0) return pos;\n  const angleInRadians = (Math.PI / 180) * angle;\n  const x =\n    pos[0] * Math.cos(angleInRadians) + pos[1] * Math.sin(angleInRadians);\n  const y =\n    pos[1] * Math.cos(angleInRadians) - pos[0] * Math.sin(angleInRadians);\n  return [x, y];\n}\n\nfunction getHandlers(\n  set: Setter,\n  handlerProps: { trackMouse: boolean | undefined }\n): [\n  {\n    ref: (element: HTMLElement | null) => void;\n    onMouseDown?: (event: React.MouseEvent) => void;\n  },\n  AttachTouch\n] {\n  const onStart = (event: HandledEvents) => {\n    const isTouch = \"touches\" in event;\n    // if more than a single touch don't track, for now...\n    if (isTouch && event.touches.length > 1) return;\n\n    set((state, props) => {\n      // setup mouse listeners on document to track swipe since swipe can leave container\n      if (props.trackMouse && !isTouch) {\n        document.addEventListener(mouseMove, onMove);\n        document.addEventListener(mouseUp, onUp);\n      }\n      const { clientX, clientY } = isTouch ? event.touches[0] : event;\n      const xy = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n\n      props.onTouchStartOrOnMouseDown &&\n        props.onTouchStartOrOnMouseDown({ event });\n\n      return {\n        ...state,\n        ...initialState,\n        initial: xy.slice() as Vector2,\n        xy,\n        start: event.timeStamp || 0,\n      };\n    });\n  };\n\n  const onMove = (event: HandledEvents) => {\n    set((state, props) => {\n      const isTouch = \"touches\" in event;\n      // Discount a swipe if additional touches are present after\n      // a swipe has started.\n      if (isTouch && event.touches.length > 1) {\n        return state;\n      }\n\n      // if swipe has exceeded duration stop tracking\n      if (event.timeStamp - state.start > props.swipeDuration) {\n        return state.swiping ? { ...state, swiping: false } : state;\n      }\n\n      const { clientX, clientY } = isTouch ? event.touches[0] : event;\n      const [x, y] = rotateXYByAngle([clientX, clientY], props.rotationAngle);\n      const deltaX = x - state.xy[0];\n      const deltaY = y - state.xy[1];\n      const absX = Math.abs(deltaX);\n      const absY = Math.abs(deltaY);\n      const time = (event.timeStamp || 0) - state.start;\n      const velocity = Math.sqrt(absX * absX + absY * absY) / (time || 1);\n      const vxvy: Vector2 = [deltaX / (time || 1), deltaY / (time || 1)];\n\n      const dir = getDirection(absX, absY, deltaX, deltaY);\n\n      // if swipe is under delta and we have not started to track a swipe: skip update\n      const delta =\n        typeof props.delta === \"number\"\n          ? props.delta\n          : props.delta[dir.toLowerCase() as Lowercase<SwipeDirections>] ||\n            defaultProps.delta;\n      if (absX < delta && absY < delta && !state.swiping) return state;\n\n      const eventData = {\n        absX,\n        absY,\n        deltaX,\n        deltaY,\n        dir,\n        event,\n        first: state.first,\n        initial: state.initial,\n        velocity,\n        vxvy,\n      };\n\n      // call onSwipeStart if present and is first swipe event\n      eventData.first && props.onSwipeStart && props.onSwipeStart(eventData);\n\n      // call onSwiping if present\n      props.onSwiping && props.onSwiping(eventData);\n\n      // track if a swipe is cancelable (handler for swiping or swiped(dir) exists)\n      // so we can call preventDefault if needed\n      let cancelablePageSwipe = false;\n      if (\n        props.onSwiping ||\n        props.onSwiped ||\n        props[`onSwiped${dir}` as keyof SwipeableDirectionCallbacks]\n      ) {\n        cancelablePageSwipe = true;\n      }\n\n      if (\n        cancelablePageSwipe &&\n        props.preventScrollOnSwipe &&\n        props.trackTouch &&\n        event.cancelable\n      ) {\n        event.preventDefault();\n      }\n\n      return {\n        ...state,\n        // first is now always false\n        first: false,\n        eventData,\n        swiping: true,\n      };\n    });\n  };\n\n  const onEnd = (event: HandledEvents) => {\n    set((state, props) => {\n      let eventData: SwipeEventData | undefined;\n      if (state.swiping && state.eventData) {\n        // if swipe is less than duration fire swiped callbacks\n        if (event.timeStamp - state.start < props.swipeDuration) {\n          eventData = { ...state.eventData, event };\n          props.onSwiped && props.onSwiped(eventData);\n\n          const onSwipedDir =\n            props[\n              `onSwiped${eventData.dir}` as keyof SwipeableDirectionCallbacks\n            ];\n          onSwipedDir && onSwipedDir(eventData);\n        }\n      } else {\n        props.onTap && props.onTap({ event });\n      }\n\n      props.onTouchEndOrOnMouseUp && props.onTouchEndOrOnMouseUp({ event });\n\n      return { ...state, ...initialState, eventData };\n    });\n  };\n\n  const cleanUpMouse = () => {\n    // safe to just call removeEventListener\n    document.removeEventListener(mouseMove, onMove);\n    document.removeEventListener(mouseUp, onUp);\n  };\n\n  const onUp = (e: HandledEvents) => {\n    cleanUpMouse();\n    onEnd(e);\n  };\n\n  /**\n   * The value of passive on touchMove depends on `preventScrollOnSwipe`:\n   * - true => { passive: false }\n   * - false => { passive: true } // Default\n   *\n   * NOTE: When preventScrollOnSwipe is true, we attempt to call preventDefault to prevent scroll.\n   *\n   * props.touchEventOptions can also be set for all touch event listeners,\n   * but for `touchmove` specifically when `preventScrollOnSwipe` it will\n   * supersede and force passive to false.\n   *\n   */\n  const attachTouch: AttachTouch = (el, props) => {\n    let cleanup = () => {};\n    if (el && el.addEventListener) {\n      const baseOptions = {\n        ...defaultProps.touchEventOptions,\n        ...props.touchEventOptions,\n      };\n      // attach touch event listeners and handlers\n      const tls: [\n        typeof touchStart | typeof touchMove | typeof touchEnd,\n        (e: HandledEvents) => void,\n        { passive: boolean }\n      ][] = [\n        [touchStart, onStart, baseOptions],\n        // preventScrollOnSwipe option supersedes touchEventOptions.passive\n        [\n          touchMove,\n          onMove,\n          {\n            ...baseOptions,\n            ...(props.preventScrollOnSwipe ? { passive: false } : {}),\n          },\n        ],\n        [touchEnd, onEnd, baseOptions],\n      ];\n      tls.forEach(([e, h, o]) => el.addEventListener(e, h, o));\n      // return properly scoped cleanup method for removing listeners, options not required\n      cleanup = () => tls.forEach(([e, h]) => el.removeEventListener(e, h));\n    }\n    return cleanup;\n  };\n\n  const onRef = (el: HTMLElement | null) => {\n    // \"inline\" ref functions are called twice on render, once with null then again with DOM element\n    // ignore null here\n    if (el === null) return;\n    set((state, props) => {\n      // if the same DOM el as previous just return state\n      if (state.el === el) return state;\n\n      const addState: { cleanUpTouch?: () => void } = {};\n      // if new DOM el clean up old DOM and reset cleanUpTouch\n      if (state.el && state.el !== el && state.cleanUpTouch) {\n        state.cleanUpTouch();\n        addState.cleanUpTouch = void 0;\n      }\n      // only attach if we want to track touch\n      if (props.trackTouch && el) {\n        addState.cleanUpTouch = attachTouch(el, props);\n      }\n\n      // store event attached DOM el for comparison, clean up, and re-attachment\n      return { ...state, el, ...addState };\n    });\n  };\n\n  // set ref callback to attach touch event listeners\n  const output: { ref: typeof onRef; onMouseDown?: typeof onStart } = {\n    ref: onRef,\n  };\n\n  // if track mouse attach mouse down listener\n  if (handlerProps.trackMouse) {\n    output.onMouseDown = onStart;\n  }\n\n  return [output, attachTouch];\n}\n\nfunction updateTransientState(\n  state: SwipeableState,\n  props: SwipeablePropsWithDefaultOptions,\n  previousProps: SwipeablePropsWithDefaultOptions,\n  attachTouch: AttachTouch\n) {\n  // if trackTouch is off or there is no el, then remove handlers if necessary and exit\n  if (!props.trackTouch || !state.el) {\n    if (state.cleanUpTouch) {\n      state.cleanUpTouch();\n    }\n\n    return {\n      ...state,\n      cleanUpTouch: undefined,\n    };\n  }\n\n  // trackTouch is on, so if there are no handlers attached, attach them and exit\n  if (!state.cleanUpTouch) {\n    return {\n      ...state,\n      cleanUpTouch: attachTouch(state.el, props),\n    };\n  }\n\n  // trackTouch is on and handlers are already attached, so if preventScrollOnSwipe changes value,\n  // remove and reattach handlers (this is required to update the passive option when attaching\n  // the handlers)\n  if (\n    props.preventScrollOnSwipe !== previousProps.preventScrollOnSwipe ||\n    props.touchEventOptions.passive !== previousProps.touchEventOptions.passive\n  ) {\n    state.cleanUpTouch();\n\n    return {\n      ...state,\n      cleanUpTouch: attachTouch(state.el, props),\n    };\n  }\n\n  return state;\n}\n\nexport function useSwipeable(options: SwipeableProps): SwipeableHandlers {\n  const { trackMouse } = options;\n  const transientState = React.useRef({ ...initialState });\n  const transientProps = React.useRef<SwipeablePropsWithDefaultOptions>({\n    ...defaultProps,\n  });\n\n  // track previous rendered props\n  const previousProps = React.useRef<SwipeablePropsWithDefaultOptions>({\n    ...transientProps.current,\n  });\n  previousProps.current = { ...transientProps.current };\n\n  // update current render props & defaults\n  transientProps.current = {\n    ...defaultProps,\n    ...options,\n  };\n  // Force defaults for config properties\n  let defaultKey: keyof ConfigurationOptions;\n  for (defaultKey in defaultProps) {\n    if (transientProps.current[defaultKey] === void 0) {\n      (transientProps.current[defaultKey] as any) = defaultProps[defaultKey];\n    }\n  }\n\n  const [handlers, attachTouch] = React.useMemo(\n    () =>\n      getHandlers(\n        (stateSetter) =>\n          (transientState.current = stateSetter(\n            transientState.current,\n            transientProps.current\n          )),\n        { trackMouse }\n      ),\n    [trackMouse]\n  );\n\n  transientState.current = updateTransientState(\n    transientState.current,\n    transientProps.current,\n    previousProps.current,\n    attachTouch\n  );\n\n  return handlers;\n}\n","import * as React from \"react\";\n\nexport const LEFT = \"Left\";\nexport const RIGHT = \"Right\";\nexport const UP = \"Up\";\nexport const DOWN = \"Down\";\nexport type HandledEvents = React.MouseEvent | TouchEvent | MouseEvent;\nexport type Vector2 = [number, number];\nexport type SwipeDirections =\n  | typeof LEFT\n  | typeof RIGHT\n  | typeof UP\n  | typeof DOWN;\nexport interface SwipeEventData {\n  /**\n   * Absolute displacement of swipe in x. Math.abs(deltaX);\n   */\n  absX: number;\n  /**\n   * Absolute displacement of swipe in y. Math.abs(deltaY);\n   */\n  absY: number;\n  /**\n   * Displacement of swipe in x. (current.x - initial.x)\n   */\n  deltaX: number;\n  /**\n   * Displacement of swipe in y. (current.y - initial.y)\n   */\n  deltaY: number;\n  /**\n   * Direction of swipe - Left | Right | Up | Down\n   */\n  dir: SwipeDirections;\n  /**\n   * Source event.\n   */\n  event: HandledEvents;\n  /**\n   * True for the first event of a tracked swipe.\n   */\n  first: boolean;\n  /**\n   * Location where swipe started - [x, y].\n   */\n  initial: Vector2;\n  /**\n   * \"Absolute velocity\" (speed) - √(absX^2 + absY^2) / time\n   */\n  velocity: number;\n  /**\n   * Velocity per axis - [ deltaX/time, deltaY/time ]\n   */\n  vxvy: Vector2;\n}\n\nexport type SwipeCallback = (eventData: SwipeEventData) => void;\nexport type TapCallback = ({ event }: { event: HandledEvents }) => void;\n\nexport type SwipeableDirectionCallbacks = {\n  /**\n   * Called after a DOWN swipe\n   */\n  onSwipedDown: SwipeCallback;\n  /**\n   * Called after a LEFT swipe\n   */\n  onSwipedLeft: SwipeCallback;\n  /**\n   * Called after a RIGHT swipe\n   */\n  onSwipedRight: SwipeCallback;\n  /**\n   * Called after a UP swipe\n   */\n  onSwipedUp: SwipeCallback;\n};\n\nexport type SwipeableCallbacks = SwipeableDirectionCallbacks & {\n  /**\n   * Called at start of a tracked swipe.\n   */\n  onSwipeStart: SwipeCallback;\n  /**\n   * Called after any swipe.\n   */\n  onSwiped: SwipeCallback;\n  /**\n   * Called for each move event during a tracked swipe.\n   */\n  onSwiping: SwipeCallback;\n  /**\n   * Called after a tap. A touch under the min distance, `delta`.\n   */\n  onTap: TapCallback;\n  /**\n   * Called for `touchstart` and `mousedown`.\n   */\n  onTouchStartOrOnMouseDown: TapCallback;\n  /**\n   * Called for `touchend` and `mouseup`.\n   */\n  onTouchEndOrOnMouseUp: TapCallback;\n};\n\n// Configuration Options\nexport type ConfigurationOptionDelta =\n  | number\n  | { [key in Lowercase<SwipeDirections>]?: number };\n\nexport interface ConfigurationOptions {\n  /**\n   * Min distance(px) before a swipe starts. **Default**: `10`\n   */\n  delta: ConfigurationOptionDelta;\n  /**\n   * Prevents scroll during swipe in most cases. **Default**: `false`\n   */\n  preventScrollOnSwipe: boolean;\n  /**\n   * Set a rotation angle. **Default**: `0`\n   */\n  rotationAngle: number;\n  /**\n   * Track mouse input. **Default**: `false`\n   */\n  trackMouse: boolean;\n  /**\n   * Track touch input. **Default**: `true`\n   */\n  trackTouch: boolean;\n  /**\n   * Allowable duration of a swipe (ms). **Default**: `Infinity`\n   */\n  swipeDuration: number;\n  /**\n   * Options for touch event listeners\n   */\n  touchEventOptions: { passive: boolean };\n}\n\nexport type SwipeableProps = Partial<SwipeableCallbacks & ConfigurationOptions>;\n\nexport type SwipeablePropsWithDefaultOptions = Partial<SwipeableCallbacks> &\n  ConfigurationOptions;\n\nexport interface SwipeableHandlers {\n  ref(element: HTMLElement | null): void;\n  onMouseDown?(event: React.MouseEvent): void;\n}\n\nexport type SwipeableState = {\n  cleanUpTouch?: () => void;\n  el?: HTMLElement;\n  eventData?: SwipeEventData;\n  first: boolean;\n  initial: Vector2;\n  start: number;\n  swiping: boolean;\n  xy: Vector2;\n};\n\nexport type StateSetter = (\n  state: SwipeableState,\n  props: SwipeablePropsWithDefaultOptions\n) => SwipeableState;\nexport type Setter = (stateSetter: StateSetter) => void;\nexport type AttachTouch = (\n  el: HTMLElement,\n  props: SwipeablePropsWithDefaultOptions\n) => () => void;\n","// src/components/Projects.js\nimport React, { useState, useEffect } from 'react';\nimport { useSwipeable } from 'react-swipeable';\nimport { motion } from 'framer-motion';\nimport { FaGithub, FaSearch } from 'react-icons/fa';\nimport '../styles/Projects.css';\n\nconst categories = [\n  'All',\n  'Machine Learning',\n  'Web Development',\n  'Games',\n  'Data Analysis',\n  'Systems'\n];\n\nconst projectData = [\n  {\n    title: 'Modern React Portfolio Website',\n    description: 'Engineered a responsive single-page application using React and modern JavaScript. Implemented custom animations, dynamic content filtering, and responsive design principles. Features include component-based architecture, state management, and seamless user experience with CSS transitions and Intersection Observer API.',\n    link: 'https://github.com/java-heapler/portfolio',\n    categories: ['Web Development', 'React']\n  },\n  { title: 'Ants Vs. SomeBees', description: 'Developed a tower defense game using Python, focusing on OOP and functional programming paradigms.', link: 'https://github.com/java-heapler/ants-vs-somebees', categories: ['Games', 'Python'] },\n  { title: 'Cats', description: 'Created a typing game using Python, implemented algorithms to calculate typing speed and accuracy.', link: 'https://github.com/java-heapler/cats', categories: ['Games', 'Python'] },\n  { title: 'Hog', description: 'Built a dice game using Python, incorporating strategic decision-making and probabilistic analysis.', link: 'https://github.com/java-heapler/hog', categories: ['Games', 'Python'] },\n  { title: 'Scheme', description: 'Implemented an interpreter for the Scheme language using Python, focusing on parsing and evaluation.', link: 'https://github.com/java-heapler/scheme', categories: ['Systems', 'Python'] },\n  { title: 'Ataxx', description: 'Created a board game with a graphical user interface using Java and Java Swing.', link: 'https://github.com/java-heapler/ataxx', categories: ['Games', 'Java'] },\n  { title: 'Enigma', description: 'Simulated the Enigma machine using Java, focusing on cryptographic algorithms.', link: 'https://github.com/java-heapler/enigma', categories: ['Machine Learning', 'Java'] },\n  { title: 'Gitlet', description: 'Developed a version control system similar to Git using Java, implemented core version control features.', link: 'https://github.com/java-heapler/gitlet', categories: ['Systems', 'Java'] },\n  { title: 'Philphix', description: 'Developed a text processing tool using C, focusing on efficient text parsing and replacement algorithms.', link: 'https://github.com/java-heapler/philphix', categories: ['Systems', 'C'] },\n  { title: 'Pacman', description: 'Developed an AI for Pacman using Python, implemented search algorithms and reinforcement learning techniques.', link: 'https://github.com/java-heapler/pacman', categories: ['Machine Learning', 'Python'] },\n  { title: 'Social Buzz Analyzer', description: 'Performed sentiment analysis using NLP techniques in Python with NLTK and spaCy, visualized trends in Jupyter Notebook.', link: 'https://github.com/java-heapler/social-buzz-analyzer', categories: ['Data Analysis', 'Python'] },\n  { title: 'Smart Sales Predictor', description: 'Built a forecasting model using ARIMA and Prophet in Python, improved accuracy by 20%, preprocessed data with pandas.', link: 'https://github.com/java-heapler/smart-sales-predictor', categories: ['Data Analysis', 'Python'] },\n  { title: 'Customer Insight Clustering', description: 'Implemented K-Means clustering in Python, analyzed data with pandas, visualized clusters using matplotlib and seaborn.', link: 'https://github.com/java-heapler/customer-insight-clustering', categories: ['Data Analysis', 'Python'] },\n  { title: 'Proactive Maintenance Predictor', description: 'Developed time-series predictive maintenance model in Python, achieved 95% accuracy.', link: 'https://github.com/java-heapler/proactive-maintenance-predictor', categories: ['Data Analysis', 'Python'] },\n  { title: 'Sales Regression Analysis', description: 'Conducted linear regression and hypothesis testing on sales data using R.', link: 'https://github.com/java-heapler/sales-regression-analysis', categories: ['Data Analysis', 'R'] },\n  { title: 'Predictive Modeling for MNIST and College Data', description: 'Developed and evaluated models including Logistic Regression, LDA, QDA, Linear Regression, Ridge, and Lasso using Python and scikit-learn on MNIST and college admission datasets.', link: 'https://github.com/java-heapler/predictive-modeling-mnist-college', categories: ['Machine Learning', 'Python'] },\n  { title: 'Advanced Machine Learning Techniques for Data Analysis', description: 'Applied PCA, k-means clustering, SVMs, and Kernel PCA using Python, R, and scikit-learn on datasets like MNIST for dimensionality reduction, clustering, and classification.', link: 'https://github.com/java-heapler/advanced-ml-techniques', categories: ['Machine Learning', 'Python'] },\n  { title: 'Ensemble Methods and SVM for Advanced Data Analysis', description: 'Implemented Bagging, Boosting, SVMs, and Random Forests using Python, scikit-learn, and pandas on MNIST dataset for classification and variance reduction.', link: 'https://github.com/java-heapler/ensemble-methods-svm', categories: ['Machine Learning', 'Python'] },\n  { title: 'Neural Network Digit Classification', description: 'Developed neural networks for digit classification using Python and NumPy, implementing perceptron, backpropagation, and RNNs for tasks including regression and language identification.', link: 'https://github.com/java-heapler/nn-digit-classification', categories: ['Machine Learning', 'Python'] },\n  { title: 'Neural Networks and Learning Theory Applications', description: 'Explored advanced techniques like FNNs, CNNs, Autoencoders, and GANs using Python, PyTorch, and scikit-learn. Analyzed datasets like CIFAR-10 and Fashion MNIST, implementing dropout and various optimizers for enhanced performance.', link: 'https://github.com/java-heapler/nn-learning-theory', categories: ['Machine Learning', 'Python'] }\n];\n\nfunction Projects() {\n  const [filter, setFilter] = useState('All');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 768);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsMobile(window.innerWidth <= 768);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  const filteredProjects = projectData.filter(project => {\n    const matchesFilter = filter === 'All' || project.categories.includes(filter);\n    const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                         project.description.toLowerCase().includes(searchTerm.toLowerCase());\n    return matchesFilter && matchesSearch;\n  });\n\n  const renderProjectCard = (project, index) => (\n    <motion.div\n      key={project.id}\n      className=\"project-card\"\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5, delay: index * 0.1 }}\n    >\n      <div className=\"project-content\">\n        <h3>{project.title}</h3>\n        <p>{project.description}</p>\n        <div className=\"project-tags\">\n          {project.categories.map((tag, idx) => (\n            <span key={idx} className=\"tag\">{tag}</span>\n          ))}\n        </div>\n      </div>\n      <div className=\"project-footer\">\n        <a\n          href={project.link}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"github-link\"\n        >\n          <FaGithub /> View Code\n        </a>\n      </div>\n    </motion.div>\n  );\n\n  const handlers = useSwipeable({\n    onSwipedLeft: () => {\n      if (isMobile && currentIndex < filteredProjects.length - 1) {\n        setCurrentIndex(currentIndex + 1);\n      }\n    },\n    onSwipedRight: () => {\n      if (isMobile && currentIndex > 0) {\n        setCurrentIndex(currentIndex - 1);\n      }\n    },\n    preventDefaultTouchmoveEvent: true,\n    trackMouse: true,\n    trackTouch: true,\n    delta: 50,\n    swipeDuration: 250,\n    touchEventOptions: { passive: true }\n  });\n\n  return (\n    <section id=\"projects\" className=\"section projects\" aria-label=\"Projects\">\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n      >\n        <h2 tabIndex=\"0\">Projects</h2>\n        \n        <div className=\"projects-controls\">\n          <div className=\"search-box\" role=\"search\">\n            <FaSearch className=\"search-icon\" aria-hidden=\"true\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search projects...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              aria-label=\"Search projects\"\n            />\n          </div>\n          \n          <div className=\"category-filters\" role=\"tablist\" aria-label=\"Project categories\">\n            {categories.map(category => (\n              <button\n                key={category}\n                className={`filter-btn ${filter === category ? 'active' : ''}`}\n                onClick={() => setFilter(category)}\n                role=\"tab\"\n                aria-selected={filter === category}\n                aria-controls=\"projects-grid\"\n              >\n                {category}\n              </button>\n            ))}\n          </div>\n        </div>\n\n        <div className=\"projects-container\">\n          {isMobile ? (\n            <div \n              className=\"projects-mobile-view\" \n              {...handlers}\n              role=\"region\"\n              aria-label=\"Project slideshow\"\n            >\n              <div \n                className=\"project-slide\"\n                style={{\n                  transform: `translateX(-${currentIndex * 100}%)`,\n                  transition: 'transform 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\n                  width: '100%',\n                  display: 'flex'\n                }}\n                role=\"list\"\n              >\n                {filteredProjects.map((project, index) => (\n                  <div \n                    key={index} \n                    className=\"project-slide-item\"\n                    style={{ width: '100%' }}\n                    role=\"listitem\"\n                    aria-label={`Project ${index + 1} of ${filteredProjects.length}`}\n                  >\n                    {renderProjectCard(project, index)}\n                  </div>\n                ))}\n              </div>\n              <div \n                className=\"swipe-instruction\" \n                aria-live=\"polite\"\n              >\n                Swipe left or right to navigate projects\n              </div>\n              <div \n                className=\"project-indicators\" \n                role=\"tablist\" \n                aria-label=\"Project navigation\"\n              >\n                {filteredProjects.map((_, index) => (\n                  <button\n                    key={index}\n                    className={`indicator ${index === currentIndex ? 'active' : ''}`}\n                    onClick={() => setCurrentIndex(index)}\n                    aria-label={`Go to project ${index + 1}`}\n                    role=\"tab\"\n                    aria-selected={index === currentIndex}\n                    tabIndex={index === currentIndex ? 0 : -1}\n                  />\n                ))}\n              </div>\n            </div>\n          ) : (\n            <div \n              className=\"projects-grid\" \n              role=\"list\" \n              aria-label=\"Projects grid\"\n            >\n              {filteredProjects.map((project, index) => (\n                <div key={index} role=\"listitem\">\n                  {renderProjectCard(project, index)}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </motion.div>\n    </section>\n  );\n}\n\nexport default Projects;\n"],"names":["defaultProps","delta","preventScrollOnSwipe","rotationAngle","trackMouse","trackTouch","swipeDuration","Infinity","touchEventOptions","passive","initialState","first","initial","start","swiping","xy","mouseMove","mouseUp","rotateXYByAngle","pos","angle","angleInRadians","Math","PI","cos","sin","getHandlers","set","handlerProps","onStart","event","isTouch","touches","length","state","props","document","addEventListener","onMove","onUp","clientX","clientY","onTouchStartOrOnMouseDown","Object","assign","slice","timeStamp","x","y","deltaX","deltaY","absX","abs","absY","time","velocity","sqrt","vxvy","dir","getDirection","toLowerCase","eventData","onSwipeStart","onSwiping","cancelablePageSwipe","onSwiped","concat","cancelable","preventDefault","onEnd","onSwipedDir","onTap","onTouchEndOrOnMouseUp","e","removeEventListener","attachTouch","el","cleanup","baseOptions","tls","forEach","_ref","h","o","_ref2","output","ref","addState","cleanUpTouch","onMouseDown","useSwipeable","options","transientState","React","transientProps","previousProps","current","defaultKey","handlers","stateSetter","undefined","updateTransientState","categories","projectData","title","description","link","filter","setFilter","useState","searchTerm","setSearchTerm","currentIndex","setCurrentIndex","isMobile","setIsMobile","window","innerWidth","useEffect","handleResize","filteredProjects","project","matchesFilter","includes","matchesSearch","renderProjectCard","index","_jsxs","motion","div","className","opacity","animate","transition","duration","delay","children","_jsx","map","tag","idx","href","target","rel","FaGithub","id","onSwipedLeft","onSwipedRight","preventDefaultTouchmoveEvent","tabIndex","role","FaSearch","type","placeholder","value","onChange","category","onClick","_objectSpread","style","transform","width","display","_"],"sourceRoot":""}