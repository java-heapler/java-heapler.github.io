{"version":3,"file":"static/js/144.76dbc20b.chunk.js","mappings":"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","sources":["components/Projects.js"],"sourcesContent":["// src/components/Projects.js\nimport React, { useState, useEffect, useMemo } from 'react';\nimport { motion } from 'framer-motion';\nimport { FaGithub, FaSearch } from 'react-icons/fa';\nimport '../styles/Projects.css';\n\nconst categories = [\n  'All',\n  'Machine Learning',\n  'Web Development',\n  'Games',\n  'Data Analysis',\n  'Systems'\n];\n\nconst projectData = [\n  {\n    title: 'Modern React Portfolio Website',\n    description: 'Engineered a responsive single-page application using React and modern JavaScript. Implemented custom animations, dynamic content filtering, and responsive design principles.',\n    link: 'https://github.com/java-heapler/portfolio',\n    categories: ['Web Development', 'React']\n  },\n  { title: 'Ants Vs. SomeBees', description: 'Developed a tower defense game using Python, focusing on OOP and functional programming paradigms.', link: 'https://github.com/java-heapler/ants-vs-somebees', categories: ['Games', 'Python'] },\n  { title: 'Cats', description: 'Created a typing game using Python, implemented algorithms to calculate typing speed and accuracy.', link: 'https://github.com/java-heapler/cats', categories: ['Games', 'Python'] },\n  { title: 'Hog', description: 'Built a dice game using Python, incorporating strategic decision-making and probabilistic analysis.', link: 'https://github.com/java-heapler/hog', categories: ['Games', 'Python'] },\n  { title: 'Scheme', description: 'Implemented an interpreter for the Scheme language using Python, focusing on parsing and evaluation.', link: 'https://github.com/java-heapler/scheme', categories: ['Systems', 'Python'] },\n  { title: 'Ataxx', description: 'Created a board game with a graphical user interface using Java and Java Swing.', link: 'https://github.com/java-heapler/ataxx', categories: ['Games', 'Java'] },\n  { title: 'Enigma', description: 'Simulated the Enigma machine using Java, focusing on cryptographic algorithms.', link: 'https://github.com/java-heapler/enigma', categories: ['Machine Learning', 'Java'] },\n  { title: 'Gitlet', description: 'Developed a version control system similar to Git using Java, implemented core version control features.', link: 'https://github.com/java-heapler/gitlet', categories: ['Systems', 'Java'] },\n  { title: 'Philphix', description: 'Developed a text processing tool using C, focusing on efficient text parsing and replacement algorithms.', link: 'https://github.com/java-heapler/philphix', categories: ['Systems', 'C'] },\n  { title: 'Pacman', description: 'Developed an AI for Pacman using Python, implemented search algorithms and reinforcement learning techniques.', link: 'https://github.com/java-heapler/pacman', categories: ['Machine Learning', 'Python'] },\n  { title: 'Social Buzz Analyzer', description: 'Performed sentiment analysis using NLP techniques in Python with NLTK and spaCy, visualized trends in Jupyter Notebook.', link: 'https://github.com/java-heapler/social-buzz-analyzer', categories: ['Data Analysis', 'Python'] },\n  { title: 'Smart Sales Predictor', description: 'Built a forecasting model using ARIMA and Prophet in Python, improved accuracy by 20%, preprocessed data with pandas.', link: 'https://github.com/java-heapler/smart-sales-predictor', categories: ['Data Analysis', 'Python'] },\n  { title: 'Customer Insight Clustering', description: 'Implemented K-Means clustering in Python, analyzed data with pandas, visualized clusters using matplotlib and seaborn.', link: 'https://github.com/java-heapler/customer-insight-clustering', categories: ['Data Analysis', 'Python'] },\n  { title: 'Proactive Maintenance Predictor', description: 'Developed time-series predictive maintenance model in Python, achieved 95% accuracy.', link: 'https://github.com/java-heapler/proactive-maintenance-predictor', categories: ['Data Analysis', 'Python'] },\n  { title: 'Sales Regression Analysis', description: 'Conducted linear regression and hypothesis testing on sales data using R.', link: 'https://github.com/java-heapler/sales-regression-analysis', categories: ['Data Analysis', 'R'] },\n  { title: 'Predictive Modeling for MNIST and College Data', description: 'Developed and evaluated models including Logistic Regression, LDA, QDA, Linear Regression, Ridge, and Lasso using Python and scikit-learn on MNIST and college admission datasets.', link: 'https://github.com/java-heapler/predictive-modeling-mnist-college', categories: ['Machine Learning', 'Python'] },\n  { title: 'Advanced Machine Learning Techniques for Data Analysis', description: 'Applied PCA, k-means clustering, SVMs, and Kernel PCA using Python, R, and scikit-learn on datasets like MNIST for dimensionality reduction, clustering, and classification.', link: 'https://github.com/java-heapler/advanced-ml-techniques', categories: ['Machine Learning', 'Python'] },\n  { title: 'Ensemble Methods and SVM for Advanced Data Analysis', description: 'Implemented Bagging, Boosting, SVMs, and Random Forests using Python, scikit-learn, and pandas on MNIST dataset for classification and variance reduction.', link: 'https://github.com/java-heapler/ensemble-methods-svm', categories: ['Machine Learning', 'Python'] },\n  { title: 'Neural Network Digit Classification', description: 'Developed neural networks for digit classification using Python and NumPy, implementing perceptron, backpropagation, and RNNs for tasks including regression and language identification.', link: 'https://github.com/java-heapler/nn-digit-classification', categories: ['Machine Learning', 'Python'] },\n  { title: 'Neural Networks and Learning Theory Applications', description: 'Explored advanced techniques like FNNs, CNNs, Autoencoders, and GANs using Python, PyTorch, and scikit-learn. Analyzed datasets like CIFAR-10 and Fashion MNIST, implementing dropout and various optimizers for enhanced performance.', link: 'https://github.com/java-heapler/nn-learning-theory', categories: ['Machine Learning', 'Python'] }\n];\n\nfunction Projects() {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState('All');\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        setIsVisible(entry.isIntersecting);\n      },\n      { threshold: 0.1 }\n    );\n\n    const section = document.getElementById('projects');\n    if (section) {\n      observer.observe(section);\n    }\n\n    return () => {\n      if (section) {\n        observer.unobserve(section);\n      }\n    };\n  }, []);\n\n  const filteredProjects = useMemo(() => {\n    return projectData.filter(project => {\n      const matchesSearch = project.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                          project.description.toLowerCase().includes(searchTerm.toLowerCase());\n      const matchesCategory = selectedCategory === 'All' || project.categories.includes(selectedCategory);\n      return matchesSearch && matchesCategory;\n    });\n  }, [searchTerm, selectedCategory]);\n\n  const containerVariants = {\n    hidden: { opacity: 0 },\n    visible: { \n      opacity: 1,\n      transition: { staggerChildren: 0.1 }\n    }\n  };\n\n  const itemVariants = {\n    hidden: { opacity: 0, y: 20 },\n    visible: { opacity: 1, y: 0 }\n  };\n\n  if (!isVisible) {\n    return <section id=\"projects\" className=\"projects-section\" />;\n  }\n\n  return (\n    <section id=\"projects\" className=\"projects-section\">\n      <motion.div\n        className=\"projects-container\"\n        initial=\"hidden\"\n        animate=\"visible\"\n        variants={containerVariants}\n      >\n        <motion.h2 variants={itemVariants}>Projects</motion.h2>\n        \n        <motion.div className=\"projects-filters\" variants={itemVariants}>\n          <div className=\"search-box\">\n            <FaSearch className=\"search-icon\" />\n            <input\n              type=\"text\"\n              placeholder=\"Search projects...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              aria-label=\"Search projects\"\n            />\n          </div>\n\n          <div className=\"category-filters\">\n            {categories.map((category) => (\n              <button\n                key={category}\n                className={`filter-btn ${selectedCategory === category ? 'active' : ''}`}\n                onClick={() => setSelectedCategory(category)}\n                aria-pressed={selectedCategory === category}\n              >\n                {category}\n              </button>\n            ))}\n          </div>\n        </motion.div>\n\n        <motion.div className=\"projects-grid\" variants={containerVariants}>\n          {filteredProjects.map((project, index) => (\n            <motion.div\n              key={project.title}\n              className=\"project-card\"\n              variants={itemVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              transition={{ delay: index * 0.1 }}\n              layout\n            >\n              <div className=\"project-content\">\n                <h3>{project.title}</h3>\n                <p>{project.description}</p>\n                <div className=\"project-tags\">\n                  {project.categories.map((tag) => (\n                    <span key={tag} className=\"tag\">{tag}</span>\n                  ))}\n                </div>\n              </div>\n              <div className=\"project-footer\">\n                <a \n                  href={project.link} \n                  target=\"_blank\" \n                  rel=\"noopener noreferrer\" \n                  className=\"github-link\"\n                  aria-label={`View ${project.title} code on GitHub`}\n                >\n                  <FaGithub /> View on GitHub\n                </a>\n              </div>\n            </motion.div>\n          ))}\n        </motion.div>\n      </motion.div>\n    </section>\n  );\n}\n\nexport default Projects;\n"],"names":["categories","projectData","title","description","link","searchTerm","setSearchTerm","useState","selectedCategory","setSelectedCategory","isVisible","setIsVisible","useEffect","observer","IntersectionObserver","_ref","entry","isIntersecting","threshold","section","document","getElementById","observe","unobserve","filteredProjects","useMemo","filter","project","matchesSearch","toLowerCase","includes","matchesCategory","containerVariants","hidden","opacity","visible","transition","staggerChildren","itemVariants","y","_jsx","id","className","children","_jsxs","motion","div","initial","animate","variants","h2","FaSearch","type","placeholder","value","onChange","e","target","map","category","concat","onClick","index","delay","layout","tag","href","rel","FaGithub"],"sourceRoot":""}