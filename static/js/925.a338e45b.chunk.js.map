{"version":3,"file":"static/js/925.a338e45b.chunk.js","mappings":"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","sources":["../node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/get-value-transition.mjs","../node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/motion-utils/dist/es/noop.mjs","../node_modules/framer-motion/dist/es/frameloop/batcher.mjs","../node_modules/framer-motion/dist/es/frameloop/render-step.mjs","../node_modules/framer-motion/dist/es/frameloop/frame.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/motion-utils/dist/es/errors.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","../node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","../node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","../node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/is-generator.mjs","../node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","../node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/linear.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/utils/mix/number.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","../node_modules/framer-motion/dist/es/utils/mix/color.mjs","../node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","../node_modules/framer-motion/dist/es/utils/mix/complex.mjs","../node_modules/framer-motion/dist/es/utils/mix/index.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","../node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","../node_modules/framer-motion/dist/es/utils/memo.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-flags.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/memo-supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-linear-easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/attach-timeline.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","../node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","../node_modules/framer-motion/dist/es/render/dom/scroll/supports.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","../node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","../node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","../node_modules/motion-dom/dist/es/gestures/hover.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","../node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","../node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/motion-dom/dist/es/gestures/press/index.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/get-context-window.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/frameloop/microtask.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/components/create-factory.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","../node_modules/framer-motion/dist/es/render/components/motion/create.mjs"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","const noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalKeys, positionalValues, removeNonTranslationalTransform };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { positionalKeys, isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate === null || onUpdate === void 0 ? void 0 : onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete === null || onComplete === void 0 ? void 0 : onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from '../../../../utils/progress.mjs';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { generateLinearEasing } from '../../animators/waapi/utils/linear.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 * clamp(0.05, 1, 1 - options.bounce) * Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { invariant, noop } from 'motion-utils';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { clamp } from './clamp.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { invariant, noop } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && input[0] === input[1])\n        return () => output[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mixNumber } from '../mix/number.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { calcGeneratorDuration } from '../generators/utils/calc-duration.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { invariant } from 'motion-utils';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from '../../../../utils/memo.mjs';\nimport { supportsFlags } from './supports-flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo-supports.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\nimport { generateLinearEasing } from './utils/linear.mjs';\nimport { supportsLinearEasing } from './utils/supports-linear-easing.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { memo } from '../../../../utils/memo.mjs';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { noop } from 'motion-utils';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { isWaapiSupportedEasing } from './waapi/easing.mjs';\nimport { attachTimeline } from './waapi/utils/attach-timeline.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsLinearEasing } from './waapi/utils/supports-linear-easing.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        var _a;\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!((_a = motionValue.owner) === null || _a === void 0 ? void 0 : _a.current)) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            motionValue &&\n            motionValue.owner &&\n            motionValue.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !motionValue.owner.getProps().onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { memo } from '../../../utils/memo.mjs';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../render/dom/scroll/supports.mjs';\n\nclass GroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { GroupPlaybackControls } from '../GroupPlaybackControls.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"11.15.0\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/get-value-transition.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\n/**\n * Filter out events that are not pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        callback(event);\n    };\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = filterEvents((enterEvent) => {\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(enterEvent);\n        if (!onHoverEnd || !target)\n            return;\n        const onPointerLeave = filterEvents((leaveEvent) => {\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        });\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    });\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return focusableElements.has(element.tagName) || element.tabIndex !== -1;\n}\n\nexport { isElementKeyboardAccessible };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (onPressEnd) {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element)) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from 'motion-dom';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = useCallback(() => onExitComplete && onExitComplete(id), [id, onExitComplete]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { noop } from 'motion-utils';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { secondsToMilliseconds } from './time-conversion.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { getValueTransition } from '../../animation/utils/get-value-transition.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from 'motion-utils';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { animateMotionValue } from '../interfaces/motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { Feature } from '../motion/features/Feature.mjs';\nimport { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { warning, invariant } from 'motion-utils';\nimport { featureDefinitions } from './features/definitions.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { transformPropOrder } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"11.15.0\", `Attempting to mix Motion versions ${nextValue.version} with 11.15.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","arguments","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","transformPropOrder","transformProps","Set","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","underDampedSpring","type","stiffness","damping","restSpeed","keyframesTransition","duration","ease","getDefaultTransition","valueKey","_ref","keyframes","startsWith","Math","sqrt","getValueTransition","transition","MotionGlobalConfig","instantAnimationState","isNotNull","getFinalKeyframe","finalKeyframe","repeat","repeatType","resolvedKeyframes","filter","index","noop","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","triggerCallback","callback","step","schedule","queue","add","cancel","delete","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","max","min","keepAlive","immediate","frame","cancelFrame","frameSteps","requestAnimationFrame","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","easing","p","reverseEasing","backOut","backIn","backInOut","anticipate","pow","circIn","sin","acos","circOut","circInOut","isZeroValueString","test","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","split","trim","splitCSSVariableRegex","getVariableValue","element","depth","concat","fallback","match","exec","token1","token2","parseCSSVariable","resolved","window","getComputedStyle","getPropertyValue","trimmed","parseFloat","clamp","number","parse","transform","alpha","_objectSpread","scale","default","createUnitType","unit","endsWith","degrees","percent","px","vh","vw","progressPercentage","positionalKeys","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","width","_ref2","_ref3","paddingLeft","paddingRight","height","_ref4","_ref5","y","paddingTop","paddingBottom","top","_ref6","left","_ref7","bottom","_ref8","_ref9","right","_ref10","_ref11","translateX","translateY","testValueType","dimensionValueTypes","findDimensionValueType","find","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","map","transformsToRestore","removedTransforms","getValue","push","removeNonTranslationalTransform","measureInitialState","restore","_a","measureEndState","suspendedScrollY","scrollTo","complete","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","name","motionValue","isAsync","this","isComplete","scheduleResolve","currentValue","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","sanitize","round","floatRegex","singleColorRegex","isColorString","testProp","Boolean","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","a","b","c","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","replace","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","maxWidth","maxHeight","padding","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateZ","z","perspective","transformPerspective","opacity","originX","originY","originZ","int","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isGenerator","clearTime","time","newTime","queueMicrotask","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","BaseAnimation","autoplay","delay","repeatDelay","options","_objectWithoutProperties","_excluded","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","then","resolve","reject","currentFinishedPromise","flatten","Promise","progress","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","velocityPerSecond","frameDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","mass","bounce","visualDuration","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","d","e","f","initialGuess","result","rootIterations","approximateRoot","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","root","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easeIn","easeOut","easeInOut","isBezierDefinition","easingLookup","linear","easingDefinitionToFunction","x1","y1","x2","y2","combineFunctions","pipe","_len","transformers","_key","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","mixNumber$1","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","interpolate","input","isClamp","inputLength","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","arr","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","splice","frameloopDriver","passTimestamp","stop","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","currentTime","playbackSpeed","pendingPlayState","startTime","teardown","onStop","KeyframeResolver$1","onResolved","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","play","pause","tick","sample","speed","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","memo","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","attachTimeline","animation","timeline","onfinish","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","owner","_this$options","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","_this$options2","_excluded2","sampleTime","setWithVelocity","supports","HTMLElement","supportsScrollTimeline","ScrollTimeline","GroupPlaybackControls","animations","runAll","onResolve","onReject","all","catch","getAll","propName","setAll","newValue","subscriptions","methodName","controls","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","addUniqueItem","item","indexOf","removeItem","SubscriptionManager","handler","notify","numSubscriptions","getSize","collectMotionValues","MotionValue","init","_this","version","canTrackVelocity","events","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","setMotionValue","hasValue","addValue","camelToDash","str","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","isMotionValue","addValueToWillChange","willChange","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","setupGesture","elementOrSelector","elements","scope","selectorCache","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","filterEvents","event","pointerType","isPrimaryPointer","button","isPrimary","isPressing","firePointerEvent","dispatchEvent","PointerEvent","bubbles","focusableElements","isNodeOrChild","parentElement","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","currentTarget","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","enableKeyboardPress","focusEvent","handleKeydown","handleKeyup","handleBlur","extractEventInfo","point","pageX","pageY","addDomEvent","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","transformTemplate","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","PresenceContext","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","sourceAxis","scaleKey","originKey","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","compareByDepth","FlatTree","children","isDirty","resolveMotionValue","unwrappedValue","toValue","timeout","checkElapsed","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","args","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","hasOptionsChanged","prevViewport","hasViewportOptionChanged","tap","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","MotionConfigContext","isStatic","reducedMotion","MotionContext","isBrowser","useIsomorphicLayoutEffect","useLayoutEffect","LazyContext","strict","useVisualElement","visualState","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","useMotionRef","externalRef","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","features","loadFeatures","ForwardRefMotionComponent","forwardRef","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","layoutGroupId","lowercaseSVGElements","isSVGComponent","renderHTML","vars","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","attrs","setAttribute","isForcedMotionValue","scrapeMotionValuesFromProps","newValues","scrapeMotionValuesFromProps$1","charAt","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","createHtmlRenderState","createSvgRenderState","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","viewBox","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","tag","svgMotionConfig","getBBox","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","baseConfig","prefersReducedMotion","hasReducedMotionListener","visualElementStore","valueTypes","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","getAttribute","createDomVisualElement","motion"],"sourceRoot":""}