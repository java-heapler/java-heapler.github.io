{"version":3,"file":"static/js/635.19e005ac.chunk.js","mappings":"gOAYA,EAVkBA,IAA4B,IAA3B,IAAEC,EAAG,IAAEC,GAAcF,EAANG,GAAIC,EAAAA,EAAAA,GAAAJ,EAAAK,GACpC,MAAMC,EAAUL,EAAIM,QAAQ,gBAAiB,SAC7C,OACEC,EAAAA,EAAAA,MAAA,WAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAQC,OAAQL,EAASM,KAAK,gBAC9BF,EAAAA,EAAAA,KAAA,OAAAG,EAAAA,EAAAA,GAAA,CAAKZ,IAAKA,EAAKC,IAAKA,EAAKY,QAAQ,QAAWX,MACpC,ECiCd,EArCkBH,IAAqB,IAApB,KAAEe,EAAI,KAAEC,GAAMhB,EAC/B,MAAM,OAAEiB,IAAWC,EAAAA,EAAAA,KAGbC,EAAWJ,EAAKR,QAAQ,OAAQ,IAGhCa,EAAgB,GAAAC,OAAMC,GAAsB,kBAAAD,OAAiBF,EAASZ,QAAQ,cAAe,gBAAe,cAC5GgB,EAAiB,GAAAF,OAAMC,GAAsB,kBAAAD,OAAiBN,GAWpE,OATAS,EAAAA,EAAAA,YAAU,KACRC,QAAQC,IAAI,aAADL,OAAcL,EAAI,KAAK,CAChCC,SACAG,mBACAG,oBACAI,YAAaV,EAASG,EAAmBG,GACzC,GACD,CAACN,EAAQG,EAAkBG,EAAmBP,KAG/CN,EAAAA,EAAAA,KAACkB,EAAS,CACR3B,IAAKgB,EAASG,EAAmBG,EACjCrB,IAAG,GAAAmB,OAAKL,EAAI,SACZa,UAAU,aACVC,MAAM,KACNC,OAAO,KACPC,QAAUC,IACRR,QAAQS,MAAM,wBAADb,OAAyBY,EAAEE,OAAOlC,MAC3CgB,GAAUgB,EAAEE,OAAOlC,MAAQsB,IAC7BE,QAAQC,IAAI,uCAADL,OAAwCL,IACnDiB,EAAEE,OAAOlC,IAAMsB,EACjB,GAEF,C","sources":["components/LazyImage.js","components/SkillIcon.js"],"sourcesContent":["import React from 'react';\n\nconst LazyImage = ({ src, alt, ...rest }) => {\n  const webpSrc = src.replace(/\\.(jpg|png)$/i, '.webp');\n  return (\n    <picture>\n      <source srcSet={webpSrc} type=\"image/webp\" />\n      <img src={src} alt={alt} loading=\"lazy\" {...rest} />\n    </picture>\n  );\n};\n\nexport default LazyImage; ","import React, { useEffect } from 'react';\nimport { useTheme } from '../context/ThemeContext';\nimport LazyImage from './LazyImage';\n\nconst SkillIcon = ({ icon, name }) => {\n  const { isDark } = useTheme();\n\n  // Get the base name without extension\n  const baseName = icon.replace('.svg', '');\n  \n  // Construct paths for both light and dark mode\n  const darkModeIconPath = `${process.env.PUBLIC_URL}/assets/icons/${baseName.replace('scikitlearn', 'scikit-learn')}-light.svg`;\n  const lightModeIconPath = `${process.env.PUBLIC_URL}/assets/icons/${icon}`;\n\n  useEffect(() => {\n    console.log(`SkillIcon ${name}:`, {\n      isDark,\n      darkModeIconPath,\n      lightModeIconPath,\n      currentPath: isDark ? darkModeIconPath : lightModeIconPath\n    });\n  }, [isDark, darkModeIconPath, lightModeIconPath, name]);\n\n  return (\n    <LazyImage\n      src={isDark ? darkModeIconPath : lightModeIconPath}\n      alt={`${name} icon`}\n      className=\"skill-icon\"\n      width=\"32\"\n      height=\"32\"\n      onError={(e) => {\n        console.error(`Failed to load icon: ${e.target.src}`);\n        if (isDark && e.target.src !== lightModeIconPath) {\n          console.log(`Falling back to light mode icon for ${name}`);\n          e.target.src = lightModeIconPath;\n        }\n      }}\n    />\n  );\n};\n\nexport default SkillIcon; "],"names":["_ref","src","alt","rest","_objectWithoutProperties","_excluded","webpSrc","replace","_jsxs","children","_jsx","srcSet","type","_objectSpread","loading","icon","name","isDark","useTheme","baseName","darkModeIconPath","concat","process","lightModeIconPath","useEffect","console","log","currentPath","LazyImage","className","width","height","onError","e","error","target"],"sourceRoot":""}