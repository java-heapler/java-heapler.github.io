{"version":3,"file":"static/js/817.12a328e0.chunk.js","mappings":"qPA+CA,EA7CkBA,IAAmE,IAAlE,IAAEC,EAAG,YAAEC,EAAW,IAAEC,EAAG,UAAEC,EAAS,MAAEC,EAAK,OAAEC,GAAiBN,EAANO,GAAIC,EAAAA,EAAAA,GAAAR,EAAAS,GAC3E,MAAOC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,OAClCC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,WAAS,GAyBnC,OAvBAK,EAAAA,EAAAA,YAAU,KACR,MAAMC,EAAM,IAAIC,MAgBhB,OAfAD,EAAIjB,IAAMA,EAEViB,EAAIE,OAAS,KACXT,EAAYV,GACZa,GAAW,EAAM,EAGnBI,EAAIG,QAAU,KACRnB,GACFS,EAAYT,GAEdc,GAAS,GACTF,GAAW,EAAM,EAGZ,KACLI,EAAIE,OAAS,KACbF,EAAIG,QAAU,IAAI,CACnB,GACA,CAACpB,EAAKC,KAGPoB,EAAAA,EAAAA,MAAA,OAAKlB,UAAS,wBAAAmB,OAA0BV,EAAU,UAAY,GAAE,KAAAU,OAAInB,GAAa,IAAKoB,SAAA,CACnFX,IAAWY,EAAAA,EAAAA,KAAA,OAAKrB,UAAU,oBAAoBsB,MAAO,CAAErB,QAAOC,aAC7DO,GAAWH,IACXe,EAAAA,EAAAA,KAAA,OAAAE,EAAAA,EAAAA,GAAA,CACE1B,IAAKS,EACLP,IAAKA,EACLE,MAAOA,EACPC,OAAQA,EACRF,UAAS,cAAAmB,OAAgBR,EAAQ,QAAU,KACvCR,MAGJ,C,qFCvCV,MAqCA,EArCkBP,IAAqB,IAApB,KAAE4B,EAAI,KAAEC,GAAM7B,EAC/B,MAAM,OAAE8B,IAAWC,EAAAA,EAAAA,KAGbC,EAAWJ,EAAKK,QAAQ,OAAQ,IAGhCC,EAAgB,GAAAX,OAAMY,GAAsB,kBAAAZ,OAAiBS,EAASC,QAAQ,cAAe,gBAAe,cAC5GG,EAAiB,GAAAb,OAAMY,GAAsB,kBAAAZ,OAAiBK,GAWpE,OATAX,EAAAA,EAAAA,YAAU,KACRoB,QAAQC,IAAI,aAADf,OAAcM,EAAI,KAAK,CAChCC,SACAI,mBACAE,oBACAG,YAAaT,EAASI,EAAmBE,GACzC,GACD,CAACN,EAAQI,EAAkBE,EAAmBP,KAG/CJ,EAAAA,EAAAA,KAACe,EAAAA,EAAS,CACRvC,IAAK6B,EAASI,EAAmBE,EACjCjC,IAAG,GAAAoB,OAAKM,EAAI,SACZzB,UAAU,aACVC,MAAM,KACNC,OAAO,KACPmC,QAAUC,IACRL,QAAQtB,MAAM,wBAADQ,OAAyBmB,EAAEC,OAAO1C,MAC3C6B,GAAUY,EAAEC,OAAO1C,MAAQmC,IAC7BC,QAAQC,IAAI,uCAADf,OAAwCM,IACnDa,EAAEC,OAAO1C,IAAMmC,EACjB,GAEF,C","sources":["components/LazyImage.js","components/SkillIcon.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst LazyImage = ({ src, fallbackSrc, alt, className, width, height, ...rest }) => {\n  const [imageSrc, setImageSrc] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const img = new Image();\n    img.src = src;\n    \n    img.onload = () => {\n      setImageSrc(src);\n      setLoading(false);\n    };\n    \n    img.onerror = () => {\n      if (fallbackSrc) {\n        setImageSrc(fallbackSrc);\n      }\n      setError(true);\n      setLoading(false);\n    };\n\n    return () => {\n      img.onload = null;\n      img.onerror = null;\n    };\n  }, [src, fallbackSrc]);\n\n  return (\n    <div className={`lazy-image-container ${loading ? 'loading' : ''} ${className || ''}`}>\n      {loading && <div className=\"image-placeholder\" style={{ width, height }} />}\n      {!loading && imageSrc && (\n        <img \n          src={imageSrc} \n          alt={alt} \n          width={width}\n          height={height}\n          className={`lazy-image ${error ? 'error' : ''}`}\n          {...rest}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LazyImage; ","import React, { useEffect } from 'react';\nimport { useTheme } from '../context/ThemeContext';\nimport LazyImage from './LazyImage';\n\nconst SkillIcon = ({ icon, name }) => {\n  const { isDark } = useTheme();\n\n  // Get the base name without extension\n  const baseName = icon.replace('.svg', '');\n  \n  // Construct paths for both light and dark mode\n  const darkModeIconPath = `${process.env.PUBLIC_URL}/assets/icons/${baseName.replace('scikitlearn', 'scikit-learn')}-light.svg`;\n  const lightModeIconPath = `${process.env.PUBLIC_URL}/assets/icons/${icon}`;\n\n  useEffect(() => {\n    console.log(`SkillIcon ${name}:`, {\n      isDark,\n      darkModeIconPath,\n      lightModeIconPath,\n      currentPath: isDark ? darkModeIconPath : lightModeIconPath\n    });\n  }, [isDark, darkModeIconPath, lightModeIconPath, name]);\n\n  return (\n    <LazyImage\n      src={isDark ? darkModeIconPath : lightModeIconPath}\n      alt={`${name} icon`}\n      className=\"skill-icon\"\n      width=\"32\"\n      height=\"32\"\n      onError={(e) => {\n        console.error(`Failed to load icon: ${e.target.src}`);\n        if (isDark && e.target.src !== lightModeIconPath) {\n          console.log(`Falling back to light mode icon for ${name}`);\n          e.target.src = lightModeIconPath;\n        }\n      }}\n    />\n  );\n};\n\nexport default SkillIcon; "],"names":["_ref","src","fallbackSrc","alt","className","width","height","rest","_objectWithoutProperties","_excluded","imageSrc","setImageSrc","useState","loading","setLoading","error","setError","useEffect","img","Image","onload","onerror","_jsxs","concat","children","_jsx","style","_objectSpread","icon","name","isDark","useTheme","baseName","replace","darkModeIconPath","process","lightModeIconPath","console","log","currentPath","LazyImage","onError","e","target"],"sourceRoot":""}