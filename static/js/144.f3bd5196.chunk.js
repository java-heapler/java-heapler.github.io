"use strict";(self.webpackChunkjoe_heupler_portfolio=self.webpackChunkjoe_heupler_portfolio||[]).push([[144],{144:(e,i,a)=>{a.r(i),a.d(i,{default:()=>l});var t=a(43),n=a(946),s=a(204),o=a(579);const r=["All","Machine Learning","Web Development","Games","Data Analysis","Systems"],c=[{title:"Modern React Portfolio Website",description:"Engineered a responsive single-page application using React and modern JavaScript. Implemented custom animations, dynamic content filtering, and responsive design principles. Features include component-based architecture, state management, and seamless user experience with CSS transitions and Intersection Observer API.",link:"https://github.com/java-heapler/portfolio",categories:["Web Development","React"]},{title:"Ants Vs. SomeBees",description:"Developed a tower defense game using Python, focusing on OOP and functional programming paradigms.",link:"https://github.com/java-heapler/ants-vs-somebees",categories:["Games","Python"]},{title:"Cats",description:"Created a typing game using Python, implemented algorithms to calculate typing speed and accuracy.",link:"https://github.com/java-heapler/cats",categories:["Games","Python"]},{title:"Hog",description:"Built a dice game using Python, incorporating strategic decision-making and probabilistic analysis.",link:"https://github.com/java-heapler/hog",categories:["Games","Python"]},{title:"Scheme",description:"Implemented an interpreter for the Scheme language using Python, focusing on parsing and evaluation.",link:"https://github.com/java-heapler/scheme",categories:["Systems","Python"]},{title:"Ataxx",description:"Created a board game with a graphical user interface using Java and Java Swing.",link:"https://github.com/java-heapler/ataxx",categories:["Games","Java"]},{title:"Enigma",description:"Simulated the Enigma machine using Java, focusing on cryptographic algorithms.",link:"https://github.com/java-heapler/enigma",categories:["Machine Learning","Java"]},{title:"Gitlet",description:"Developed a version control system similar to Git using Java, implemented core version control features.",link:"https://github.com/java-heapler/gitlet",categories:["Systems","Java"]},{title:"Philphix",description:"Developed a text processing tool using C, focusing on efficient text parsing and replacement algorithms.",link:"https://github.com/java-heapler/philphix",categories:["Systems","C"]},{title:"Pacman",description:"Developed an AI for Pacman using Python, implemented search algorithms and reinforcement learning techniques.",link:"https://github.com/java-heapler/pacman",categories:["Machine Learning","Python"]},{title:"Social Buzz Analyzer",description:"Performed sentiment analysis using NLP techniques in Python with NLTK and spaCy, visualized trends in Jupyter Notebook.",link:"https://github.com/java-heapler/social-buzz-analyzer",categories:["Data Analysis","Python"]},{title:"Smart Sales Predictor",description:"Built a forecasting model using ARIMA and Prophet in Python, improved accuracy by 20%, preprocessed data with pandas.",link:"https://github.com/java-heapler/smart-sales-predictor",categories:["Data Analysis","Python"]},{title:"Customer Insight Clustering",description:"Implemented K-Means clustering in Python, analyzed data with pandas, visualized clusters using matplotlib and seaborn.",link:"https://github.com/java-heapler/customer-insight-clustering",categories:["Data Analysis","Python"]},{title:"Proactive Maintenance Predictor",description:"Developed time-series predictive maintenance model in Python, achieved 95% accuracy.",link:"https://github.com/java-heapler/proactive-maintenance-predictor",categories:["Data Analysis","Python"]},{title:"Sales Regression Analysis",description:"Conducted linear regression and hypothesis testing on sales data using R.",link:"https://github.com/java-heapler/sales-regression-analysis",categories:["Data Analysis","R"]},{title:"Predictive Modeling for MNIST and College Data",description:"Developed and evaluated models including Logistic Regression, LDA, QDA, Linear Regression, Ridge, and Lasso using Python and scikit-learn on MNIST and college admission datasets.",link:"https://github.com/java-heapler/predictive-modeling-mnist-college",categories:["Machine Learning","Python"]},{title:"Advanced Machine Learning Techniques for Data Analysis",description:"Applied PCA, k-means clustering, SVMs, and Kernel PCA using Python, R, and scikit-learn on datasets like MNIST for dimensionality reduction, clustering, and classification.",link:"https://github.com/java-heapler/advanced-ml-techniques",categories:["Machine Learning","Python"]},{title:"Ensemble Methods and SVM for Advanced Data Analysis",description:"Implemented Bagging, Boosting, SVMs, and Random Forests using Python, scikit-learn, and pandas on MNIST dataset for classification and variance reduction.",link:"https://github.com/java-heapler/ensemble-methods-svm",categories:["Machine Learning","Python"]},{title:"Neural Network Digit Classification",description:"Developed neural networks for digit classification using Python and NumPy, implementing perceptron, backpropagation, and RNNs for tasks including regression and language identification.",link:"https://github.com/java-heapler/nn-digit-classification",categories:["Machine Learning","Python"]},{title:"Neural Networks and Learning Theory Applications",description:"Explored advanced techniques like FNNs, CNNs, Autoencoders, and GANs using Python, PyTorch, and scikit-learn. Analyzed datasets like CIFAR-10 and Fashion MNIST, implementing dropout and various optimizers for enhanced performance.",link:"https://github.com/java-heapler/nn-learning-theory",categories:["Machine Learning","Python"]}];const l=function(){const[e,i]=(0,t.useState)("All"),[a,l]=(0,t.useState)(""),d=c.filter((i=>{const t="All"===e||i.categories.includes(e),n=i.title.toLowerCase().includes(a.toLowerCase())||i.description.toLowerCase().includes(a.toLowerCase());return t&&n}));return(0,o.jsx)("section",{id:"projects",className:"section projects",children:(0,o.jsxs)(n.P.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{duration:.5},children:[(0,o.jsx)("h2",{children:"Projects"}),(0,o.jsxs)("div",{className:"projects-controls",children:[(0,o.jsxs)("div",{className:"search-box",children:[(0,o.jsx)(s.KSO,{className:"search-icon"}),(0,o.jsx)("input",{type:"text",placeholder:"Search projects...",value:a,onChange:e=>l(e.target.value)})]}),(0,o.jsx)("div",{className:"category-filters",children:r.map((a=>(0,o.jsx)("button",{className:"filter-btn ".concat(e===a?"active":""),onClick:()=>i(a),children:a},a)))})]}),(0,o.jsx)("div",{className:"projects-grid",children:d.map(((e,i)=>(0,o.jsxs)(n.P.div,{className:"project-card",initial:{opacity:0,y:20},animate:{opacity:1,y:0},transition:{delay:.1*i},children:[(0,o.jsxs)("div",{className:"project-content",children:[(0,o.jsx)("h3",{children:e.title}),(0,o.jsx)("p",{children:e.description}),(0,o.jsx)("div",{className:"project-tags",children:e.categories.map(((e,i)=>(0,o.jsx)("span",{className:"tag",children:e},i)))})]}),(0,o.jsx)("div",{className:"project-footer",children:(0,o.jsxs)("a",{href:e.link,target:"_blank",rel:"noopener noreferrer",className:"github-link",children:[(0,o.jsx)(s.hL4,{})," View Code"]})})]},i)))})]})})}}}]);
//# sourceMappingURL=144.f3bd5196.chunk.js.map