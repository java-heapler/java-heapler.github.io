{"version":3,"file":"static/js/556.9287cb3e.chunk.js","mappings":"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","sources":["components/Features.js","components/About.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nexport const ReadingProgress = () => {\n  const [width, setWidth] = useState(0);\n\n  const scrollHandler = () => {\n    const windowHeight = window.document.documentElement.scrollHeight - window.innerHeight;\n    const currentPosition = window.scrollY;\n    const scrolled = (currentPosition / windowHeight) * 100;\n    setWidth(scrolled);\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', scrollHandler);\n    return () => window.removeEventListener('scroll', scrollHandler);\n  }, []);\n\n  return <div className=\"reading-progress-bar\" style={{ width: `${width}%` }} />;\n};\n\nexport const ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false);\n\n  const toggleVisibility = () => {\n    if (window.pageYOffset > 300) {\n      setIsVisible(true);\n    } else {\n      setIsVisible(false);\n    }\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n  };\n\n  useEffect(() => {\n    window.addEventListener('scroll', toggleVisibility);\n    return () => window.removeEventListener('scroll', toggleVisibility);\n  }, []);\n\n  return (\n    <div \n      className={`scroll-to-top ${isVisible ? 'visible' : ''}`}\n      onClick={scrollToTop}\n    >\n      â†‘\n    </div>\n  );\n};\n\nexport const InteractiveBackground = () => {\n  useEffect(() => {\n    const canvas = document.createElement('canvas');\n    canvas.className = 'interactive-bg';\n    document.body.appendChild(canvas);\n    const ctx = canvas.getContext('2d');\n\n    const particles = [];\n    const particleCount = 100;\n\n    const resize = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n    };\n\n    class Particle {\n      constructor() {\n        this.x = Math.random() * canvas.width;\n        this.y = Math.random() * canvas.height;\n        this.vx = Math.random() * 2 - 1;\n        this.vy = Math.random() * 2 - 1;\n        this.radius = Math.random() * 2;\n      }\n\n      move() {\n        if (this.x < 0 || this.x > canvas.width) this.vx = -this.vx;\n        if (this.y < 0 || this.y > canvas.height) this.vy = -this.vy;\n        this.x += this.vx;\n        this.y += this.vy;\n      }\n    }\n\n    const init = () => {\n      resize();\n      for (let i = 0; i < particleCount; i++) {\n        particles.push(new Particle());\n      }\n    };\n\n    const animate = () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      particles.forEach(particle => {\n        particle.move();\n        ctx.beginPath();\n        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);\n        ctx.fillStyle = 'rgba(0, 123, 255, 0.1)';\n        ctx.fill();\n      });\n      requestAnimationFrame(animate);\n    };\n\n    init();\n    animate();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      window.removeEventListener('resize', resize);\n      document.body.removeChild(canvas);\n    };\n  }, []);\n\n  return null;\n};\n\nexport const LoadingAnimation = ({ isLoading }) => {\n  if (!isLoading) return null;\n\n  return (\n    <div className=\"loading-animation\">\n      <div className=\"loading-spinner\" />\n    </div>\n  );\n};\n\nexport const CookieConsent = () => {\n  const [showBanner, setShowBanner] = useState(true);\n\n  useEffect(() => {\n    const consent = localStorage.getItem('cookieConsent');\n    if (consent) {\n      setShowBanner(false);\n    }\n  }, []);\n\n  const acceptCookies = () => {\n    localStorage.setItem('cookieConsent', 'true');\n    setShowBanner(false);\n  };\n\n  if (!showBanner) return null;\n\n  return (\n    <div className=\"cookie-consent\">\n      <p>\n        This website uses cookies to enhance your experience.\n        By continuing to visit this site, you agree to our use of cookies.\n      </p>\n      <button onClick={acceptCookies}>Accept</button>\n    </div>\n  );\n};\n\nexport const SkillProgressBar = ({ skill, percentage }) => {\n  const [width, setWidth] = useState(0);\n\n  useEffect(() => {\n    // Animate the progress bar when component mounts\n    const timer = setTimeout(() => {\n      setWidth(percentage);\n    }, 100);\n\n    return () => clearTimeout(timer);\n  }, [percentage]);\n\n  return (\n    <div className=\"skill-progress\">\n      <div className=\"skill-header\">\n        <span className=\"skill-name\">{skill}</span>\n        <span className=\"skill-percentage\">{percentage}%</span>\n      </div>\n      <div className=\"progress-bar\">\n        <div \n          className=\"progress-fill\" \n          style={{ width: `${width}%` }} \n        />\n      </div>\n    </div>\n  );\n}; ","import React, { useEffect, useRef, useState, lazy, Suspense } from 'react';\nimport { logPageView, logEvent } from '../utils/analytics';\nimport '../styles/About.css';\nimport { ReadingProgress, ScrollToTop, InteractiveBackground, LoadingAnimation, SkillProgressBar } from './Features';\n\n// Lazy load the skill icons\nconst SkillIcon = lazy(() => import('./SkillIcon'));\n\nconst About = () => {\n  const sectionRef = useRef(null);\n\n  useEffect(() => {\n    // Track page view when component mounts\n    logPageView(\"/about\");\n\n    const observerOptions = {\n      threshold: 0.1,\n      rootMargin: '50px',\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('fade-in');\n          observer.unobserve(entry.target);\n        }\n      });\n    }, observerOptions);\n\n    // Observe elements that should fade in\n    const elements = sectionRef.current.querySelectorAll('.fade-in-element');\n    elements.forEach(el => observer.observe(el));\n\n    return () => observer.disconnect();\n  }, []);\n\n  const getDelayClass = (index) => `delay-${index * 2}`;\n\n  const skillCategories = {\n    'Core Technologies': {\n      description: 'Advanced proficiency in modern development stack',\n      skills: [\n        { name: 'Python', icon: 'python.svg' },\n        { name: 'Java', icon: 'java.svg' },\n        { name: 'JavaScript', icon: 'javascript.svg' },\n        { name: 'React', icon: 'react.svg' }\n      ]\n    },\n    'Data & Machine Learning': {\n      description: 'Expertise in AI/ML frameworks and data processing',\n      skills: [\n        { name: 'TensorFlow', icon: 'tensorflow.svg' },\n        { name: 'PyTorch', icon: 'pytorch.svg' },\n        { name: 'scikit-learn', icon: 'scikitlearn.svg' },\n        { name: 'SQL', icon: 'sql.svg' }\n      ]\n    },\n    'Infrastructure & DevOps': {\n      description: 'Cloud-native development and deployment expertise',\n      skills: [\n        { name: 'AWS', icon: 'aws.svg' },\n        { name: 'Docker', icon: 'docker.svg' },\n        { name: 'Kubernetes', icon: 'kubernetes.svg' },\n        { name: 'Git', icon: 'git.svg' }\n      ]\n    }\n  };\n\n  const achievements = [\n    {\n      metric: \"40%\",\n      description: \"Deployment speed improvement through CI/CD optimization\"\n    },\n    {\n      metric: \"99.9%\",\n      description: \"System uptime maintained for critical applications\"\n    },\n    {\n      metric: \"50+\",\n      description: \"Successfully completed projects\"\n    }\n  ];\n\n  // Analytics event tracking functions\n  const trackResumeDownload = () => {\n    logEvent('User', 'Downloaded Resume', 'Resume Download');\n  };\n\n  const trackSkillClick = (skillName) => {\n    logEvent('Skill Interaction', 'Clicked Skill', skillName);\n  };\n\n  const handleKeyPress = (e, callback) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      callback();\n    }\n  };\n\n  return (\n    <section id=\"about\" className=\"about-section\" ref={sectionRef} aria-label=\"About Me Section\">\n      <div className=\"about-content\">\n        <LoadingAnimation />\n        <ReadingProgress />\n        <ScrollToTop />\n        <InteractiveBackground />\n        \n        <h2 className=\"fade-in-element\">About Me</h2>\n        \n        <div className=\"about-text\" aria-label=\"Personal Introduction\">\n          <p className=\"fade-in-element\">\n            As a UC Berkeley graduate with a unique background in Data Science and Cognitive Science, \n            I bring a comprehensive approach to solving complex technical challenges. My expertise spans \n            full-stack development, machine learning, and augmented reality, allowing me to architect \n            end-to-end solutions that scale.\n          </p>\n          \n          <div className=\"achievements-grid fade-in-element\" aria-label=\"Key Achievements\">\n            {achievements.map((achievement, index) => (\n              <div \n                key={index} \n                className={`achievement-card ${getDelayClass(index)}`}\n                aria-label={`Achievement: ${achievement.metric} - ${achievement.description}`}\n              >\n                <h3>{achievement.metric}</h3>\n                <p>{achievement.description}</p>\n              </div>\n            ))}\n          </div>\n\n          <p className=\"fade-in-element\">\n            In my recent role at NavAR, I specialized in building indoor navigation systems using \n            cutting-edge AR technologies, while implementing robust CI/CD pipelines that accelerated \n            deployments by 40%. My experience with AWS and containerization enables me to develop \n            and maintain scalable cloud infrastructure, with a particular focus on optimizing \n            system performance.\n          </p>\n\n          <p className=\"fade-in-element\">\n            On the data science front, I've developed and deployed various machine learning models, \n            from sentiment analysis to neural networks for digit classification. I combine strong \n            software engineering practices with data science expertise to create maintainable, \n            production-ready solutions that deliver real business value.\n          </p>\n        </div>\n\n        <div \n          className=\"technical-expertise fade-in-element\"\n          aria-label=\"Technical Skills and Expertise\"\n        >\n          <h3>Technical Expertise</h3>\n          {Object.entries(skillCategories).map(([category, { description, skills }], categoryIndex) => (\n            <div \n              key={category} \n              className={`expertise-category ${getDelayClass(categoryIndex)}`}\n              aria-label={`${category} Category`}\n            >\n              <h4>{category}</h4>\n              <p className=\"category-description\">{description}</p>\n              <ul className=\"skills-list\" aria-label={`${category} Skills`}>\n                {skills.map((skill, skillIndex) => (\n                  <li \n                    key={skill.name} \n                    className={`skill-item ${getDelayClass(skillIndex)}`}\n                    aria-label={`${skill.name} Skill`}\n                  >\n                    <div \n                      role=\"button\"\n                      tabIndex={0}\n                      onClick={() => trackSkillClick(skill.name)}\n                      onKeyPress={(e) => handleKeyPress(e, () => trackSkillClick(skill.name))}\n                    >\n                      <Suspense fallback={<div className=\"skill-icon-placeholder\" aria-hidden=\"true\" />}>\n                        <SkillIcon icon={skill.icon} name={skill.name} />\n                      </Suspense>\n                      <span>{skill.name}</span>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          ))}\n        </div>\n\n        <div \n          className=\"key-interests fade-in-element\"\n          aria-label=\"Key Areas of Interest\"\n        >\n          <h3>Key Interests</h3>\n          <ul>\n            <li>Backend Development & System Architecture</li>\n            <li>Cloud Infrastructure & DevOps</li>\n            <li>Machine Learning & Data Engineering</li>\n            <li>Full-Stack Development</li>\n          </ul>\n        </div>\n\n        <div \n          className=\"resume-section fade-in-element\"\n          aria-label=\"Resume Download Section\"\n        >\n          <h3>Resume</h3>\n          <p>For a detailed overview of my experience and qualifications, please download my resume:</p>\n          <a \n            href={`${process.env.PUBLIC_URL}/assets/resume/softwareEngineeringResume.pdf`}\n            target=\"_blank\" \n            rel=\"noopener noreferrer\" \n            className=\"resume-button\"\n            onClick={trackResumeDownload}\n            download\n            aria-label=\"Download Resume PDF\"\n          >\n            Download Resume (PDF)\n          </a>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About;\n"],"names":["ReadingProgress","width","setWidth","useState","scrollHandler","windowHeight","window","document","documentElement","scrollHeight","innerHeight","currentPosition","scrollY","useEffect","addEventListener","removeEventListener","_jsx","className","style","concat","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","onClick","scrollToTop","scrollTo","top","behavior","children","InteractiveBackground","canvas","createElement","body","appendChild","ctx","getContext","particles","resize","innerWidth","height","Particle","constructor","this","x","Math","random","y","vx","vy","radius","move","animate","clearRect","forEach","particle","beginPath","arc","PI","fillStyle","fill","requestAnimationFrame","init","i","push","removeChild","LoadingAnimation","_ref","isLoading","SkillIcon","lazy","About","sectionRef","useRef","logPageView","observer","IntersectionObserver","entries","entry","isIntersecting","target","classList","add","unobserve","threshold","rootMargin","current","querySelectorAll","el","observe","disconnect","getDelayClass","index","trackSkillClick","skillName","logEvent","id","ref","_jsxs","metric","description","map","achievement","Object","skills","name","icon","categoryIndex","category","skill","skillIndex","role","tabIndex","onKeyPress","e","handleKeyPress","callback","key","preventDefault","Suspense","fallback","href","process","rel","trackResumeDownload","download"],"sourceRoot":""}