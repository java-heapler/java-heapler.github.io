{"version":3,"file":"static/js/448.094614a4.chunk.js","mappings":"2LAGA,MAkDA,EAlDsBA,IAAkB,IAAjB,QAAEC,GAASD,EAYhC,OAVAE,EAAAA,EAAAA,YAAU,KAERC,SAASC,KAAKC,UAAUC,IAAI,gBAGrB,KACLH,SAASC,KAAKC,UAAUE,OAAO,eAAe,IAE/C,KAGDC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,UACnCC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yBAAwBC,SAAA,EACrCF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBACJC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,2BACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,yHACHC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,8CACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uCAGNF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,qBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oNAEHF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,kBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,qIAEHF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,iBACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,+DACHC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,sBACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,mCACJF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,uDAGNF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,aACJF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iFAELF,EAAAA,EAAAA,KAAA,UAAQI,QAASX,EAASQ,UAAU,eAAcC,SAAC,cAEjD,E,cCpCK,SAASG,EAAWC,EAAKC,GAA6B,IAAfC,EAAOC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/D,MAAM,SACJG,EAAW,OAAM,OACjBC,EAAS,MACPL,GAGGM,EAAaC,IAAkBC,EAAAA,EAAAA,WAAS,KAC7C,IAEE,OAmEJ,SAA6BV,EAAKW,EAAcL,GAG9C,OAFoC,SAAbA,EAAsBM,IAA6BN,GAGxE,IAAK,QACH,OAaN,SAA6BN,EAAKW,GAChC,IAAKE,IAA2B,OAAOF,EAEvC,MAAMG,EAAOC,aAAaC,QAAQhB,GAClC,GAAa,OAATc,EAAe,OAAOH,EAE1B,IACE,MAAMM,EAASC,KAAKC,MAAML,GAG1B,OAAKG,GAAWA,EAAOV,QAAUU,EAAOV,OAASa,KAAKC,OACpDN,aAAaO,WAAWtB,GACjBW,QAIeN,IAAjBY,EAAOM,MAAsBN,EAAOM,MAAQZ,CACrD,CAAE,MAAOa,GAEP,OADAC,QAAQD,MAAM,oCAAqCA,GAC5Cb,CACT,CACF,CAlCae,CAAoB1B,EAAKW,GAClC,IAAK,UACH,OAmCN,SAA+BX,EAAKW,GAClC,IAAKgB,IAA6B,OAAOhB,EAEzC,MAAMG,EAAOc,eAAeZ,QAAQhB,GACpC,GAAa,OAATc,EAAe,OAAOH,EAE1B,IACE,MAAMM,EAASC,KAAKC,MAAML,GAG1B,OAAKG,GAAWA,EAAOV,QAAUU,EAAOV,OAASa,KAAKC,OACpDO,eAAeN,WAAWtB,GACnBW,QAIeN,IAAjBY,EAAOM,MAAsBN,EAAOM,MAAQZ,CACrD,CAAE,MAAOa,GAEP,OADAC,QAAQD,MAAM,sCAAuCA,GAC9Cb,CACT,CACF,CAxDakB,CAAsB7B,EAAKW,GAKpC,QACE,OAAOA,EAEb,CAlFWmB,CAAoB9B,EAAKC,EAAcK,EAChD,CAAE,MAAOkB,GAEP,OADAC,QAAQD,MAAM,0CAADO,OAA2C/B,EAAG,MAAMwB,GAC1DvB,CACT,MAIK+B,EAAeC,IAAoBvB,EAAAA,EAAAA,UAAS,CACjDwB,SAAS,EACTV,MAAO,KACPW,UAgBF,SAA4BC,GAC1B,OAAQA,GACN,IAAK,QAAS,OAAOvB,IACrB,IAAK,UAAW,OAAOc,IACvB,IAAK,YAAa,OAAOU,IACzB,IAAK,OAAQ,OAAOxB,KAA6Bc,KAA+BU,IAChF,QAAS,OAAO,EAEpB,CAxBaC,CAAmBhC,KAIhC,SAASM,IACP,MAAiB,SAAbN,EAA4BA,EAG5B+B,IAA+B,YAC/BxB,IAAkC,QAClCc,IAAoC,UAEjC,QACT,CAcA,SAASd,IACP,IACE,MAAM0B,EAAU,mBAGhB,OAFAxB,aAAayB,QAAQD,EAASA,GAC9BxB,aAAaO,WAAWiB,IACjB,CACT,CAAE,MAAOE,GACP,OAAO,CACT,CACF,CAGA,SAASd,IACP,IACE,MAAMY,EAAU,mBAGhB,OAFAX,eAAeY,QAAQD,EAASA,GAChCX,eAAeN,WAAWiB,IACnB,CACT,CAAE,MAAOE,GACP,OAAO,CACT,CACF,CAGA,SAASJ,IACP,MAAyB,qBAAXK,QAA0B,cAAeA,MACzD,CAqEA,SAASC,EAAiB3C,GACxB,OAAO,IAAI4C,SAAQ,CAACC,EAASC,KAC3B,IAAKT,IAEH,YADAS,EAAO,IAAIC,MAAM,4BAInB,MAAMC,EAAUC,UAAUC,KAAK,oBAAqB,GAEpDF,EAAQG,gBAAkB,SAASC,GACjC,MAAMC,EAAKD,EAAME,OAAOC,OACnBF,EAAGG,iBAAiBC,SAAS,oBAChCJ,EAAGK,kBAAkB,kBAEzB,EAEAV,EAAQW,QAAU,WAChBb,EAAO,IAAIC,MAAM,2BACnB,EAEAC,EAAQY,UAAY,SAASR,GAC3B,MAAMC,EAAKD,EAAME,OAAOC,OAGlBM,EAFcR,EAAGS,YAAY,CAAC,mBAAoB,YAC9BC,YAAY,mBACbC,IAAIhE,GAE7B6D,EAAWF,QAAU,WACnBb,EAAO,IAAIC,MAAM,gCACnB,EAEAc,EAAWD,UAAY,WACrB,MAAML,EAASM,EAAWN,OAE1B,GAAKA,EAAL,CAMA,GAAIA,EAAOhD,QAAUgD,EAAOhD,OAASa,KAAKC,MAAO,CAM/C,OAJ0BgC,EAAGS,YAAY,CAAC,mBAAoB,aACxBC,YAAY,mBACtCE,OAAOjE,QACnB6C,EAAQ,KAEV,CAEAA,EAAQU,EAAOhC,MAZf,MAFEsB,EAAQ,KAeZ,CACF,CAAC,GAEL,EAGAzD,EAAAA,EAAAA,YAAU,KACS,cAAbkB,GAAyC,SAAbA,IAC9B2B,GAAiBiC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAEhC,SAAS,MAE9CS,EAAiB3C,GACdoE,MAAK7C,IACU,OAAVA,GACFd,EAAec,GAEjBU,GAAiBiC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAEhC,SAAS,EAAOV,MAAO,QAAQ,IAErE6C,OAAM7C,IACLC,QAAQD,MAAM,iCAAkCA,GAChDS,GAAiBiC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBD,GAAI,IACPhC,SAAS,EACTV,MAAOA,EAAM8C,WACZ,IAET,GACC,CAACtE,EAAKM,EAAUqC,IAGnB,MAAM4B,GAAWC,EAAAA,EAAAA,cAAajD,IAC5B,IAEE,MAAMkD,EAAelD,aAAiBmD,SAAWnD,EAAMf,GAAee,EACtEd,EAAegE,GAEf,MAAME,EAA8B,SAAbrE,EAAsBM,IAA6BN,EACpEsE,EAAarE,EAASa,KAAKC,MAAQd,EAAS,KAGlD,OAAQoE,GACN,IAAK,QACC9D,KACFE,aAAayB,QAAQxC,EAAKkB,KAAK2D,UAAU,CACvCtD,MAAOkD,EACPlE,OAAQqE,KAGZ,MACF,IAAK,UACCjD,KACFC,eAAeY,QAAQxC,EAAKkB,KAAK2D,UAAU,CACzCtD,MAAOkD,EACPlE,OAAQqE,KAGZ,MACF,IAAK,YACH,GAAIvC,IAAwB,CACVY,UAAUC,KAAK,oBAAqB,GAE5CU,UAAY,SAASR,GAChBA,EAAME,OAAOC,OACDO,YAAY,CAAC,mBAAoB,aAC9BC,YAAY,mBAEhCe,IAAI,CACRvD,MAAOkD,EACPlE,OAAQqE,GACP5E,EACL,CACF,CACA,MACF,QACEyB,QAAQsD,KAAK,qBAADhD,OAAsB4C,EAAc,oBAEtD,CAAE,MAAOnD,GACPC,QAAQD,MAAM,uCAADO,OAAwC/B,EAAG,MAAMwB,GAC9DS,GAAiBiC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAE1C,MAAOA,EAAM8C,WACpD,IACC,CAACtE,EAAKQ,EAAaF,EAAUC,EAAQK,EAA0BC,EAAyBc,EAA2BU,IAGhH2C,GAAcR,EAAAA,EAAAA,cAAY,KAC9B,IACE,MAAMG,EAA8B,SAAbrE,EAAsBM,IAA6BN,EAE1E,OAAQqE,GACN,IAAK,QACC9D,KACFE,aAAaO,WAAWtB,GAE1B,MACF,IAAK,UACC2B,KACFC,eAAeN,WAAWtB,GAE5B,MACF,IAAK,YACH,GAAIqC,IAAwB,CACVY,UAAUC,KAAK,oBAAqB,GAE5CU,UAAY,SAASR,GAChBA,EAAME,OAAOC,OACDO,YAAY,CAAC,mBAAoB,aAC9BC,YAAY,mBAEhCE,OAAOjE,EACf,CACF,CACA,MACF,QACEyB,QAAQsD,KAAK,qBAADhD,OAAsB4C,EAAc,oBAGpDlE,EAAeR,EACjB,CAAE,MAAOuB,GACPC,QAAQD,MAAM,wCAADO,OAAyC/B,EAAG,MAAMwB,GAC/DS,GAAiBiC,IAAIC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAI,IAAE1C,MAAOA,EAAM8C,WACpD,IACC,CAACtE,EAAKM,EAAUL,EAAcW,EAA0BC,EAAyBc,EAA2BU,IAE/G,MAAO,CAAC7B,EAAa+D,EAAUS,EAAahD,EAC9C,CCjUA,MA+IA,EA/IsBiD,KACpB,MAAOC,EAAaC,IAAkBzE,EAAAA,EAAAA,WAAS,IACxC0E,EAAmBC,IAAwB3E,EAAAA,EAAAA,WAAS,IAGpD4E,EAAeC,EAAkBC,EAAqBxD,GAAiBjC,EAC5E,gBACA,KACA,CACEO,SAAU,QACVC,OAAQ,WAKZnB,EAAAA,EAAAA,YAAU,KACJqG,CAAwC,GAI3C,CAACH,EAAetD,KAEnB5C,EAAAA,EAAAA,YAAU,KAEHkG,GAAkBtD,EAAcE,QAE1BoD,GAAiBA,EAAcI,WACxCC,IAFAR,GAAe,EAGjB,GACC,CAACG,EAAetD,EAAcE,WAGjC9C,EAAAA,EAAAA,YAAU,KACJ4C,EAAcR,QAChBC,QAAQD,MAAM,iBAAkBQ,EAAcR,OAE9C2D,GAAe,GACjB,GACC,CAACnD,EAAcR,QAElB,MAAMmE,EAAkBA,KAEtBjD,OAAO,4BAA6B,EAEhCA,OAAOkD,MACTlD,OAAOkD,KAAK,SAAU,eAAgB,CACpC,cAAgB,GAEpB,EAuDF,OAAKV,GAAgBE,GAGnBvF,EAAAA,EAAAA,MAAAgG,EAAAA,SAAA,CAAAjG,SAAA,CACGwF,IACC1F,EAAAA,EAAAA,KAACoG,EAAa,CAAC3G,QAlBY4G,KAC/BV,GAAqB,EAAM,IAmBxBH,IACCxF,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTtG,UAAU,iBACVuG,QAAS,CAAEC,EAAG,IAAKC,QAAS,GAC5BC,QAAS,CAAEF,EAAG,EAAGC,QAAS,GAC1BE,WAAY,CAAEC,SAAU,IAAM3G,UAE9BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,oMAGDF,EAAAA,EAAAA,KAAA,UAAQC,UAAU,cAAcG,QAnCpB0G,KACtBnB,GAAqB,EAAK,EAkCyCzF,SAAC,mBAE5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,UAAQI,QArDU2G,KAC5B,MAAMC,EAAc,CAClBC,WAAW,EACXjB,WAAW,EACXkB,WAAW,IAAIxF,MAAOyF,eAIxBtB,EAAiBmB,GA1BjBhE,OAAO,4BAA6B,EA8BpCyC,GAAe,EAAM,EAyC6BxF,UAAU,mBAAkBC,SAAC,oBAGrEF,EAAAA,EAAAA,KAAA,UAAQI,QAvEIgH,KACtB,MAAMJ,EAAc,CAClBC,WAAW,EACXjB,WAAW,EACXkB,WAAW,IAAIxF,MAAOyF,eAIxBtB,EAAiBmB,GAGjBf,IACAR,GAAe,EAAM,EA2DuBxF,UAAU,iBAAgBC,SAAC,gBAG5D6F,aA3BkC,IAoC1C,C","sources":["components/PrivacyPolicy.js","hooks/useStorage.js","components/CookieConsent.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport '../styles/PrivacyPolicy.css';\n\nconst PrivacyPolicy = ({ onClose }) => {\n  // Add/remove privacy-open class to body when component mounts/unmounts\n  useEffect(() => {\n    // Add class when component mounts\n    document.body.classList.add('privacy-open');\n    \n    // Remove class when component unmounts\n    return () => {\n      document.body.classList.remove('privacy-open');\n    };\n  }, []);\n\n  return (\n    <div className=\"privacy-policy-modal\">\n      <div className=\"privacy-policy-content\">\n        <h2>Privacy Policy</h2>\n        <div className=\"policy-text\">\n          <h3>Analytics and Cookies</h3>\n          <p>This website uses Google Analytics 4 (GA4) to analyze website traffic and improve user experience. GA4 may collect:</p>\n          <ul>\n            <li>Pages visited and time spent</li>\n            <li>Device and browser information</li>\n            <li>Geographic location (country/city level)</li>\n            <li>Interaction with site features</li>\n          </ul>\n\n          <h3>Data Collection</h3>\n          <p>We implement IP anonymization to protect your privacy. No personally identifiable information is collected or stored. Data collected is processed by Google Analytics in accordance with their privacy policy.</p>\n\n          <h3>Cookie Usage</h3>\n          <p>This website uses essential cookies and analytics cookies. You can control analytics cookies through the cookie consent banner.</p>\n\n          <h3>Your Rights</h3>\n          <p>Under GDPR and other privacy laws, you have the right to:</p>\n          <ul>\n            <li>Access your data</li>\n            <li>Request deletion of your data</li>\n            <li>Opt-out of analytics tracking</li>\n            <li>Lodge a complaint with supervisory authorities</li>\n          </ul>\n\n          <h3>Contact</h3>\n          <p>For any privacy-related questions, please contact: jheupler@berkeley.edu</p>\n        </div>\n        <button onClick={onClose} className=\"close-button\">Close</button>\n      </div>\n    </div>\n  );\n};\n\nexport default PrivacyPolicy; ","import { useState, useEffect, useCallback } from 'react';\n\n/**\n * Custom storage hook that handles multiple storage mechanisms\n * with sophisticated fallbacks and error handling\n * \n * @param {string} key - The storage key\n * @param {any} initialValue - The initial value\n * @param {object} options - Storage options\n * @param {string} options.strategy - Storage strategy ('local', 'session', 'indexeddb', 'auto')\n * @param {number} options.expiry - Expiry time in milliseconds\n * @returns {Array} - [storedValue, setValue, removeValue, storageStatus]\n */\nexport default function useStorage(key, initialValue, options = {}) {\n  const {\n    strategy = 'auto', // 'local', 'session', 'indexeddb', 'auto'\n    expiry = null,     // null means no expiry\n  } = options;\n\n  // State to store our value\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from storage based on strategy\n      return getValueFromStorage(key, initialValue, strategy);\n    } catch (error) {\n      console.error(`Error retrieving stored value for key \"${key}\":`, error);\n      return initialValue;\n    }\n  });\n\n  // Storage status for tracking errors, loading, etc.\n  const [storageStatus, setStorageStatus] = useState({\n    loading: false,\n    error: null,\n    supported: isStorageSupported(strategy)\n  });\n\n  // Helper to determine which storage mechanism to use\n  function determineStorageStrategy() {\n    if (strategy !== 'auto') return strategy;\n    \n    // Auto-detect best storage strategy\n    if (isIndexedDBSupported()) return 'indexeddb';\n    if (isLocalStorageSupported()) return 'local';\n    if (isSessionStorageSupported()) return 'session';\n    \n    return 'memory'; // Last resort\n  }\n\n  // Helper to check if a storage strategy is supported\n  function isStorageSupported(storageType) {\n    switch (storageType) {\n      case 'local': return isLocalStorageSupported();\n      case 'session': return isSessionStorageSupported();\n      case 'indexeddb': return isIndexedDBSupported();\n      case 'auto': return isLocalStorageSupported() || isSessionStorageSupported() || isIndexedDBSupported();\n      default: return false;\n    }\n  }\n\n  // Check support for localStorage\n  function isLocalStorageSupported() {\n    try {\n      const testKey = '__storage_test__';\n      localStorage.setItem(testKey, testKey);\n      localStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  // Check support for sessionStorage\n  function isSessionStorageSupported() {\n    try {\n      const testKey = '__storage_test__';\n      sessionStorage.setItem(testKey, testKey);\n      sessionStorage.removeItem(testKey);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  // Check support for IndexedDB\n  function isIndexedDBSupported() {\n    return typeof window !== 'undefined' && 'indexedDB' in window;\n  }\n\n  // Get value from the appropriate storage\n  function getValueFromStorage(key, defaultValue, strategy) {\n    const actualStrategy = strategy === 'auto' ? determineStorageStrategy() : strategy;\n    \n    switch (actualStrategy) {\n      case 'local':\n        return getFromLocalStorage(key, defaultValue);\n      case 'session':\n        return getFromSessionStorage(key, defaultValue);\n      case 'indexeddb':\n        // For the initial value, return defaultValue since IndexedDB is async\n        // The useEffect below will handle loading from IndexedDB\n        return defaultValue; \n      default:\n        return defaultValue;\n    }\n  }\n\n  // Get from localStorage with expiry check\n  function getFromLocalStorage(key, defaultValue) {\n    if (!isLocalStorageSupported()) return defaultValue;\n    \n    const item = localStorage.getItem(key);\n    if (item === null) return defaultValue; // Explicitly check for null\n    \n    try {\n      const parsed = JSON.parse(item);\n      \n      // Check if item has expired or if value is missing\n      if (!parsed || (parsed.expiry && parsed.expiry < Date.now())) {\n        localStorage.removeItem(key);\n        return defaultValue;\n      }\n      \n      // Make sure value property exists\n      return parsed.value !== undefined ? parsed.value : defaultValue;\n    } catch (error) {\n      console.error('Error parsing localStorage value:', error);\n      return defaultValue;\n    }\n  }\n\n  // Get from sessionStorage with expiry check\n  function getFromSessionStorage(key, defaultValue) {\n    if (!isSessionStorageSupported()) return defaultValue;\n    \n    const item = sessionStorage.getItem(key);\n    if (item === null) return defaultValue; // Explicitly check for null\n    \n    try {\n      const parsed = JSON.parse(item);\n      \n      // Check if item has expired or if value is missing\n      if (!parsed || (parsed.expiry && parsed.expiry < Date.now())) {\n        sessionStorage.removeItem(key);\n        return defaultValue;\n      }\n      \n      // Make sure value property exists\n      return parsed.value !== undefined ? parsed.value : defaultValue;\n    } catch (error) {\n      console.error('Error parsing sessionStorage value:', error);\n      return defaultValue;\n    }\n  }\n\n  // Get from IndexedDB\n  function getFromIndexedDB(key) {\n    return new Promise((resolve, reject) => {\n      if (!isIndexedDBSupported()) {\n        reject(new Error('IndexedDB not supported'));\n        return;\n      }\n      \n      const request = indexedDB.open('portfolio-storage', 1);\n      \n      request.onupgradeneeded = function(event) {\n        const db = event.target.result;\n        if (!db.objectStoreNames.contains('key-value-store')) {\n          db.createObjectStore('key-value-store');\n        }\n      };\n      \n      request.onerror = function() {\n        reject(new Error('Error opening IndexedDB'));\n      };\n      \n      request.onsuccess = function(event) {\n        const db = event.target.result;\n        const transaction = db.transaction(['key-value-store'], 'readonly');\n        const store = transaction.objectStore('key-value-store');\n        const getRequest = store.get(key);\n        \n        getRequest.onerror = function() {\n          reject(new Error('Error getting from IndexedDB'));\n        };\n        \n        getRequest.onsuccess = function() {\n          const result = getRequest.result;\n          \n          if (!result) {\n            resolve(null);\n            return;\n          }\n          \n          // Check if item has expired\n          if (result.expiry && result.expiry < Date.now()) {\n            // Delete the expired item\n            const deleteTransaction = db.transaction(['key-value-store'], 'readwrite');\n            const deleteStore = deleteTransaction.objectStore('key-value-store');\n            deleteStore.delete(key);\n            resolve(null);\n            return;\n          }\n          \n          resolve(result.value);\n        };\n      };\n    });\n  }\n\n  // Load data from IndexedDB when the component mounts\n  useEffect(() => {\n    if (strategy === 'indexeddb' || strategy === 'auto') {\n      setStorageStatus(prev => ({ ...prev, loading: true }));\n      \n      getFromIndexedDB(key)\n        .then(value => {\n          if (value !== null) {\n            setStoredValue(value);\n          }\n          setStorageStatus(prev => ({ ...prev, loading: false, error: null }));\n        })\n        .catch(error => {\n          console.error('Error fetching from IndexedDB:', error);\n          setStorageStatus(prev => ({ \n            ...prev, \n            loading: false, \n            error: error.message \n          }));\n        });\n    }\n  }, [key, strategy, getFromIndexedDB]);\n\n  // Define a function to update the stored value\n  const setValue = useCallback((value) => {\n    try {\n      // If value is a function, pass the current value\n      const valueToStore = value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      \n      const actualStrategy = strategy === 'auto' ? determineStorageStrategy() : strategy;\n      const expiryTime = expiry ? Date.now() + expiry : null;\n      \n      // Store in the appropriate storage\n      switch (actualStrategy) {\n        case 'local':\n          if (isLocalStorageSupported()) {\n            localStorage.setItem(key, JSON.stringify({\n              value: valueToStore,\n              expiry: expiryTime\n            }));\n          }\n          break;\n        case 'session':\n          if (isSessionStorageSupported()) {\n            sessionStorage.setItem(key, JSON.stringify({\n              value: valueToStore,\n              expiry: expiryTime\n            }));\n          }\n          break;\n        case 'indexeddb':\n          if (isIndexedDBSupported()) {\n            const request = indexedDB.open('portfolio-storage', 1);\n            \n            request.onsuccess = function(event) {\n              const db = event.target.result;\n              const transaction = db.transaction(['key-value-store'], 'readwrite');\n              const store = transaction.objectStore('key-value-store');\n              \n              store.put({\n                value: valueToStore,\n                expiry: expiryTime\n              }, key);\n            };\n          }\n          break;\n        default:\n          console.warn(`Storage strategy \"${actualStrategy}\" not supported`);\n      }\n    } catch (error) {\n      console.error(`Error setting stored value for key \"${key}\":`, error);\n      setStorageStatus(prev => ({ ...prev, error: error.message }));\n    }\n  }, [key, storedValue, strategy, expiry, determineStorageStrategy, isLocalStorageSupported, isSessionStorageSupported, isIndexedDBSupported]);\n\n  // Define a function to remove the stored value\n  const removeValue = useCallback(() => {\n    try {\n      const actualStrategy = strategy === 'auto' ? determineStorageStrategy() : strategy;\n      \n      switch (actualStrategy) {\n        case 'local':\n          if (isLocalStorageSupported()) {\n            localStorage.removeItem(key);\n          }\n          break;\n        case 'session':\n          if (isSessionStorageSupported()) {\n            sessionStorage.removeItem(key);\n          }\n          break;\n        case 'indexeddb':\n          if (isIndexedDBSupported()) {\n            const request = indexedDB.open('portfolio-storage', 1);\n            \n            request.onsuccess = function(event) {\n              const db = event.target.result;\n              const transaction = db.transaction(['key-value-store'], 'readwrite');\n              const store = transaction.objectStore('key-value-store');\n              \n              store.delete(key);\n            };\n          }\n          break;\n        default:\n          console.warn(`Storage strategy \"${actualStrategy}\" not supported`);\n      }\n      \n      setStoredValue(initialValue);\n    } catch (error) {\n      console.error(`Error removing stored value for key \"${key}\":`, error);\n      setStorageStatus(prev => ({ ...prev, error: error.message }));\n    }\n  }, [key, strategy, initialValue, determineStorageStrategy, isLocalStorageSupported, isSessionStorageSupported, isIndexedDBSupported]);\n\n  return [storedValue, setValue, removeValue, storageStatus];\n} ","import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport '../styles/CookieConsent.css';\nimport PrivacyPolicy from './PrivacyPolicy';\nimport useStorage from '../hooks/useStorage';\n\nconst CookieConsent = () => {\n  const [showConsent, setShowConsent] = useState(false);\n  const [showPrivacyPolicy, setShowPrivacyPolicy] = useState(false);\n  \n  // Use our custom storage hook with a 1-year expiry\n  const [cookieConsent, setCookieConsent, removeCookieConsent, storageStatus] = useStorage(\n    'cookieConsent', \n    null, \n    { \n      strategy: 'local', // Force local storage for better browser support\n      expiry: 365 * 24 * 60 * 60 * 1000 // 1 year in milliseconds\n    }\n  );\n\n  // Debug logging in development mode\n  useEffect(() => {\n    if (process.env.NODE_ENV !== 'production') {\n      console.log('Cookie consent value:', cookieConsent);\n      console.log('Storage status:', storageStatus);\n    }\n  }, [cookieConsent, storageStatus]);\n\n  useEffect(() => {\n    // Only show consent dialog if explicitly no consent is stored AND we're not loading\n    if (!cookieConsent && !storageStatus.loading) {\n      setShowConsent(true);\n    } else if (cookieConsent && cookieConsent.analytics) {\n      enableAnalytics();\n    }\n  }, [cookieConsent, storageStatus.loading]);\n\n  // Log storage errors in development \n  useEffect(() => {\n    if (storageStatus.error) {\n      console.error('Storage error:', storageStatus.error);\n      // Fallback: If storage fails, use in-memory state at least for the current session\n      setShowConsent(false);\n    }\n  }, [storageStatus.error]);\n\n  const enableAnalytics = () => {\n    // Enable GA4\n    window['ga-disable-G-P1RC04G662'] = false;\n    // Enable IP anonymization\n    if (window.gtag) {\n      window.gtag('config', 'G-P1RC04G662', {\n        'anonymize_ip': true\n      });\n    }\n  };\n\n  const disableAnalytics = () => {\n    // Disable GA4\n    window['ga-disable-G-P1RC04G662'] = true;\n  };\n\n  const handleAcceptAll = () => {\n    const consentData = { \n      essential: true, \n      analytics: true,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Set consent in storage\n    setCookieConsent(consentData);\n    \n    // Even if storage might fail, update UI immediately\n    enableAnalytics();\n    setShowConsent(false);\n  };\n\n  const handleAcceptEssential = () => {\n    const consentData = { \n      essential: true, \n      analytics: false,\n      timestamp: new Date().toISOString()\n    };\n    \n    // Set consent in storage\n    setCookieConsent(consentData);\n    \n    // Even if storage might fail, update UI immediately\n    disableAnalytics();\n    setShowConsent(false);\n  };\n\n  const handleCustomize = () => {\n    setShowPrivacyPolicy(true);\n  };\n\n  const handleClosePrivacyPolicy = () => {\n    setShowPrivacyPolicy(false);\n  };\n\n  // For testing storage functionality\n  const handleResetConsent = () => {\n    if (process.env.NODE_ENV !== 'production') {\n      removeCookieConsent();\n      setShowConsent(true);\n    }\n  };\n\n  // Don't render anything if both consent and privacy policy are not showing\n  if (!showConsent && !showPrivacyPolicy) return null;\n\n  return (\n    <>\n      {showPrivacyPolicy && (\n        <PrivacyPolicy onClose={handleClosePrivacyPolicy} />\n      )}\n      {showConsent && (\n        <motion.div \n          className=\"cookie-consent\"\n          initial={{ y: 100, opacity: 0 }}\n          animate={{ y: 0, opacity: 1 }}\n          transition={{ duration: 0.5 }}\n        >\n          <div className=\"cookie-content\">\n            <p>\n              This website uses cookies to enhance your experience and analyze site usage. \n              We use essential cookies for basic functionality and optional analytics cookies to understand how you use our site.\n              <button className=\"link-button\" onClick={handleCustomize}>Learn more</button>\n            </p>\n            <div className=\"cookie-buttons\">\n              <button onClick={handleAcceptEssential} className=\"secondary-button\">\n                Essential Only\n              </button>\n              <button onClick={handleAcceptAll} className=\"primary-button\">\n                Accept All\n              </button>\n              {process.env.NODE_ENV !== 'production' && (\n                <button onClick={handleResetConsent} className=\"debug-button\" style={{ fontSize: '0.8rem', padding: '0.3rem' }}>\n                  Reset (Debug)\n                </button>\n              )}\n            </div>\n          </div>\n        </motion.div>\n      )}\n    </>\n  );\n};\n\nexport default CookieConsent; "],"names":["_ref","onClose","useEffect","document","body","classList","add","remove","_jsx","className","children","_jsxs","onClick","useStorage","key","initialValue","options","arguments","length","undefined","strategy","expiry","storedValue","setStoredValue","useState","defaultValue","determineStorageStrategy","isLocalStorageSupported","item","localStorage","getItem","parsed","JSON","parse","Date","now","removeItem","value","error","console","getFromLocalStorage","isSessionStorageSupported","sessionStorage","getFromSessionStorage","getValueFromStorage","concat","storageStatus","setStorageStatus","loading","supported","storageType","isIndexedDBSupported","isStorageSupported","testKey","setItem","e","window","getFromIndexedDB","Promise","resolve","reject","Error","request","indexedDB","open","onupgradeneeded","event","db","target","result","objectStoreNames","contains","createObjectStore","onerror","onsuccess","getRequest","transaction","objectStore","get","delete","prev","_objectSpread","then","catch","message","setValue","useCallback","valueToStore","Function","actualStrategy","expiryTime","stringify","put","warn","removeValue","CookieConsent","showConsent","setShowConsent","showPrivacyPolicy","setShowPrivacyPolicy","cookieConsent","setCookieConsent","removeCookieConsent","process","analytics","enableAnalytics","gtag","_Fragment","PrivacyPolicy","handleClosePrivacyPolicy","motion","div","initial","y","opacity","animate","transition","duration","handleCustomize","handleAcceptEssential","consentData","essential","timestamp","toISOString","handleAcceptAll"],"sourceRoot":""}